{
  "version": 3,
  "sources": ["../../../../../node_modules/src/blots/scroll.ts", "../../../../../node_modules/src/modules/history.ts", "../../../../../node_modules/src/modules/uploader.ts", "../../../../../node_modules/src/core.ts", "../../../../../node_modules/src/modules/input.ts", "../../../../../node_modules/src/modules/uiNode.ts", "../../../../../node_modules/src/formats/indent.ts", "../../../../../node_modules/src/formats/blockquote.ts", "../../../../../node_modules/src/formats/header.ts", "../../../../../node_modules/src/formats/list.ts", "../../../../../node_modules/src/formats/bold.ts", "../../../../../node_modules/src/formats/italic.ts", "../../../../../node_modules/src/formats/link.ts", "../../../../../node_modules/src/formats/script.ts", "../../../../../node_modules/src/formats/strike.ts", "../../../../../node_modules/src/formats/underline.ts", "../../../../../node_modules/src/formats/formula.ts", "../../../../../node_modules/src/formats/image.ts", "../../../../../node_modules/src/formats/video.ts", "../../../../../node_modules/src/modules/table.ts", "../../../../../node_modules/src/formats/table.ts", "../../../../../node_modules/src/modules/toolbar.ts", "../../../../../node_modules/src/ui/icons.ts", "../../../../../node_modules/src/ui/picker.ts", "../../../../../node_modules/src/ui/color-picker.ts", "../../../../../node_modules/src/ui/icon-picker.ts", "../../../../../node_modules/src/ui/tooltip.ts", "../../../../../node_modules/src/themes/base.ts", "../../../../../node_modules/src/themes/bubble.ts", "../../../../../node_modules/src/themes/snow.ts", "../../../../../node_modules/src/quill.ts"],
  "sourcesContent": ["import { ContainerBlot, LeafBlot, Scope, ScrollBlot } from 'parchment';\nimport type { Blot, Parent, EmbedBlot, ParentBlot, Registry } from 'parchment';\nimport Delta, { AttributeMap, Op } from 'quill-delta';\nimport Emitter from '../core/emitter.js';\nimport type { EmitterSource } from '../core/emitter.js';\nimport Block, { BlockEmbed, bubbleFormats } from './block.js';\nimport Break from './break.js';\nimport Container from './container.js';\n\ntype RenderBlock =\n  | {\n      type: 'blockEmbed';\n      attributes: AttributeMap;\n      key: string;\n      value: unknown;\n    }\n  | { type: 'block'; attributes: AttributeMap; delta: Delta };\n\nfunction isLine(blot: unknown): blot is Block | BlockEmbed {\n  return blot instanceof Block || blot instanceof BlockEmbed;\n}\n\ninterface UpdatableEmbed {\n  updateContent(change: unknown): void;\n}\n\nfunction isUpdatable(blot: Blot): blot is Blot & UpdatableEmbed {\n  return typeof (blot as unknown as any).updateContent === 'function';\n}\n\nclass Scroll extends ScrollBlot {\n  static blotName = 'scroll';\n  static className = 'ql-editor';\n  static tagName = 'DIV';\n  static defaultChild = Block;\n  static allowedChildren = [Block, BlockEmbed, Container];\n\n  emitter: Emitter;\n  batch: false | MutationRecord[];\n\n  constructor(\n    registry: Registry,\n    domNode: HTMLDivElement,\n    { emitter }: { emitter: Emitter },\n  ) {\n    super(registry, domNode);\n    this.emitter = emitter;\n    this.batch = false;\n    this.optimize();\n    this.enable();\n    this.domNode.addEventListener('dragstart', (e) => this.handleDragStart(e));\n  }\n\n  batchStart() {\n    if (!Array.isArray(this.batch)) {\n      this.batch = [];\n    }\n  }\n\n  batchEnd() {\n    if (!this.batch) return;\n    const mutations = this.batch;\n    this.batch = false;\n    this.update(mutations);\n  }\n\n  emitMount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_MOUNT, blot);\n  }\n\n  emitUnmount(blot: Blot) {\n    this.emitter.emit(Emitter.events.SCROLL_BLOT_UNMOUNT, blot);\n  }\n\n  emitEmbedUpdate(blot: Blot, change: unknown) {\n    this.emitter.emit(Emitter.events.SCROLL_EMBED_UPDATE, blot, change);\n  }\n\n  deleteAt(index: number, length: number) {\n    const [first, offset] = this.line(index);\n    const [last] = this.line(index + length);\n    super.deleteAt(index, length);\n    if (last != null && first !== last && offset > 0) {\n      if (first instanceof BlockEmbed || last instanceof BlockEmbed) {\n        this.optimize();\n        return;\n      }\n      const ref =\n        last.children.head instanceof Break ? null : last.children.head;\n      // @ts-expect-error\n      first.moveChildren(last, ref);\n      // @ts-expect-error\n      first.remove();\n    }\n    this.optimize();\n  }\n\n  enable(enabled = true) {\n    this.domNode.setAttribute('contenteditable', enabled ? 'true' : 'false');\n  }\n\n  formatAt(index: number, length: number, format: string, value: unknown) {\n    super.formatAt(index, length, format, value);\n    this.optimize();\n  }\n\n  insertAt(index: number, value: string, def?: unknown) {\n    if (index >= this.length()) {\n      if (def == null || this.scroll.query(value, Scope.BLOCK) == null) {\n        const blot = this.scroll.create(this.statics.defaultChild.blotName);\n        this.appendChild(blot);\n        if (def == null && value.endsWith('\\n')) {\n          blot.insertAt(0, value.slice(0, -1), def);\n        } else {\n          blot.insertAt(0, value, def);\n        }\n      } else {\n        const embed = this.scroll.create(value, def);\n        this.appendChild(embed);\n      }\n    } else {\n      super.insertAt(index, value, def);\n    }\n    this.optimize();\n  }\n\n  insertBefore(blot: Blot, ref?: Blot | null) {\n    if (blot.statics.scope === Scope.INLINE_BLOT) {\n      const wrapper = this.scroll.create(\n        this.statics.defaultChild.blotName,\n      ) as Parent;\n      wrapper.appendChild(blot);\n      super.insertBefore(wrapper, ref);\n    } else {\n      super.insertBefore(blot, ref);\n    }\n  }\n\n  insertContents(index: number, delta: Delta) {\n    const renderBlocks = this.deltaToRenderBlocks(\n      delta.concat(new Delta().insert('\\n')),\n    );\n    const last = renderBlocks.pop();\n    if (last == null) return;\n\n    this.batchStart();\n\n    const first = renderBlocks.shift();\n    if (first) {\n      const shouldInsertNewlineChar =\n        first.type === 'block' &&\n        (first.delta.length() === 0 ||\n          (!this.descendant(BlockEmbed, index)[0] && index < this.length()));\n      const delta =\n        first.type === 'block'\n          ? first.delta\n          : new Delta().insert({ [first.key]: first.value });\n      insertInlineContents(this, index, delta);\n      const newlineCharLength = first.type === 'block' ? 1 : 0;\n      const lineEndIndex = index + delta.length() + newlineCharLength;\n      if (shouldInsertNewlineChar) {\n        this.insertAt(lineEndIndex - 1, '\\n');\n      }\n\n      const formats = bubbleFormats(this.line(index)[0]);\n      const attributes = AttributeMap.diff(formats, first.attributes) || {};\n      Object.keys(attributes).forEach((name) => {\n        this.formatAt(lineEndIndex - 1, 1, name, attributes[name]);\n      });\n\n      index = lineEndIndex;\n    }\n\n    let [refBlot, refBlotOffset] = this.children.find(index);\n    if (renderBlocks.length) {\n      if (refBlot) {\n        refBlot = refBlot.split(refBlotOffset);\n        refBlotOffset = 0;\n      }\n\n      renderBlocks.forEach((renderBlock) => {\n        if (renderBlock.type === 'block') {\n          const block = this.createBlock(\n            renderBlock.attributes,\n            refBlot || undefined,\n          );\n          insertInlineContents(block, 0, renderBlock.delta);\n        } else {\n          const blockEmbed = this.create(\n            renderBlock.key,\n            renderBlock.value,\n          ) as EmbedBlot;\n          this.insertBefore(blockEmbed, refBlot || undefined);\n          Object.keys(renderBlock.attributes).forEach((name) => {\n            blockEmbed.format(name, renderBlock.attributes[name]);\n          });\n        }\n      });\n    }\n\n    if (last.type === 'block' && last.delta.length()) {\n      const offset = refBlot\n        ? refBlot.offset(refBlot.scroll) + refBlotOffset\n        : this.length();\n      insertInlineContents(this, offset, last.delta);\n    }\n\n    this.batchEnd();\n    this.optimize();\n  }\n\n  isEnabled() {\n    return this.domNode.getAttribute('contenteditable') === 'true';\n  }\n\n  leaf(index: number): [LeafBlot | null, number] {\n    const last = this.path(index).pop();\n    if (!last) {\n      return [null, -1];\n    }\n\n    const [blot, offset] = last;\n    return blot instanceof LeafBlot ? [blot, offset] : [null, -1];\n  }\n\n  line(index: number): [Block | BlockEmbed | null, number] {\n    if (index === this.length()) {\n      return this.line(index - 1);\n    }\n    // @ts-expect-error TODO: make descendant() generic\n    return this.descendant(isLine, index);\n  }\n\n  lines(index = 0, length = Number.MAX_VALUE): (Block | BlockEmbed)[] {\n    const getLines = (\n      blot: ParentBlot,\n      blotIndex: number,\n      blotLength: number,\n    ) => {\n      let lines: (Block | BlockEmbed)[] = [];\n      let lengthLeft = blotLength;\n      blot.children.forEachAt(\n        blotIndex,\n        blotLength,\n        (child, childIndex, childLength) => {\n          if (isLine(child)) {\n            lines.push(child);\n          } else if (child instanceof ContainerBlot) {\n            lines = lines.concat(getLines(child, childIndex, lengthLeft));\n          }\n          lengthLeft -= childLength;\n        },\n      );\n      return lines;\n    };\n    return getLines(this, index, length);\n  }\n\n  optimize(context?: { [key: string]: any }): void;\n  optimize(\n    mutations?: MutationRecord[],\n    context?: { [key: string]: any },\n  ): void;\n  optimize(mutations = [], context = {}) {\n    if (this.batch) return;\n    super.optimize(mutations, context);\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_OPTIMIZE, mutations, context);\n    }\n  }\n\n  path(index: number) {\n    return super.path(index).slice(1); // Exclude self\n  }\n\n  remove() {\n    // Never remove self\n  }\n\n  update(source?: EmitterSource): void;\n  update(mutations?: MutationRecord[]): void;\n  update(mutations?: MutationRecord[] | EmitterSource): void {\n    if (this.batch) {\n      if (Array.isArray(mutations)) {\n        this.batch = this.batch.concat(mutations);\n      }\n      return;\n    }\n    let source: EmitterSource = Emitter.sources.USER;\n    if (typeof mutations === 'string') {\n      source = mutations;\n    }\n    if (!Array.isArray(mutations)) {\n      mutations = this.observer.takeRecords();\n    }\n    mutations = mutations.filter(({ target }) => {\n      const blot = this.find(target, true);\n      return blot && !isUpdatable(blot);\n    });\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_BEFORE_UPDATE, source, mutations);\n    }\n    super.update(mutations.concat([])); // pass copy\n    if (mutations.length > 0) {\n      this.emitter.emit(Emitter.events.SCROLL_UPDATE, source, mutations);\n    }\n  }\n\n  updateEmbedAt(index: number, key: string, change: unknown) {\n    // Currently it only supports top-level embeds (BlockEmbed).\n    // We can update `ParentBlot` in parchment to support inline embeds.\n    const [blot] = this.descendant((b: Blot) => b instanceof BlockEmbed, index);\n    if (blot && blot.statics.blotName === key && isUpdatable(blot)) {\n      blot.updateContent(change);\n    }\n  }\n\n  protected handleDragStart(event: DragEvent) {\n    event.preventDefault();\n  }\n\n  private deltaToRenderBlocks(delta: Delta) {\n    const renderBlocks: RenderBlock[] = [];\n\n    let currentBlockDelta = new Delta();\n    delta.forEach((op) => {\n      const insert = op?.insert;\n      if (!insert) return;\n      if (typeof insert === 'string') {\n        const splitted = insert.split('\\n');\n        splitted.slice(0, -1).forEach((text) => {\n          currentBlockDelta.insert(text, op.attributes);\n          renderBlocks.push({\n            type: 'block',\n            delta: currentBlockDelta,\n            attributes: op.attributes ?? {},\n          });\n          currentBlockDelta = new Delta();\n        });\n        const last = splitted[splitted.length - 1];\n        if (last) {\n          currentBlockDelta.insert(last, op.attributes);\n        }\n      } else {\n        const key = Object.keys(insert)[0];\n        if (!key) return;\n        if (this.query(key, Scope.INLINE)) {\n          currentBlockDelta.push(op);\n        } else {\n          if (currentBlockDelta.length()) {\n            renderBlocks.push({\n              type: 'block',\n              delta: currentBlockDelta,\n              attributes: {},\n            });\n          }\n          currentBlockDelta = new Delta();\n          renderBlocks.push({\n            type: 'blockEmbed',\n            key,\n            value: insert[key],\n            attributes: op.attributes ?? {},\n          });\n        }\n      }\n    });\n\n    if (currentBlockDelta.length()) {\n      renderBlocks.push({\n        type: 'block',\n        delta: currentBlockDelta,\n        attributes: {},\n      });\n    }\n\n    return renderBlocks;\n  }\n\n  private createBlock(attributes: AttributeMap, refBlot?: Blot) {\n    let blotName: string | undefined;\n    const formats: AttributeMap = {};\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      const isBlockBlot = this.query(key, Scope.BLOCK & Scope.BLOT) != null;\n      if (isBlockBlot) {\n        blotName = key;\n      } else {\n        formats[key] = value;\n      }\n    });\n\n    const block = this.create(\n      blotName || this.statics.defaultChild.blotName,\n      blotName ? attributes[blotName] : undefined,\n    ) as ParentBlot;\n\n    this.insertBefore(block, refBlot || undefined);\n\n    const length = block.length();\n    Object.entries(formats).forEach(([key, value]) => {\n      block.formatAt(0, length, key, value);\n    });\n\n    return block;\n  }\n}\n\nfunction insertInlineContents(\n  parent: ParentBlot,\n  index: number,\n  inlineContents: Delta,\n) {\n  inlineContents.reduce((index, op) => {\n    const length = Op.length(op);\n    let attributes = op.attributes || {};\n    if (op.insert != null) {\n      if (typeof op.insert === 'string') {\n        const text = op.insert;\n        parent.insertAt(index, text);\n        const [leaf] = parent.descendant(LeafBlot, index);\n        const formats = bubbleFormats(leaf);\n        attributes = AttributeMap.diff(formats, attributes) || {};\n      } else if (typeof op.insert === 'object') {\n        const key = Object.keys(op.insert)[0]; // There should only be one key\n        if (key == null) return index;\n        parent.insertAt(index, key, op.insert[key]);\n        const isInlineEmbed = parent.scroll.query(key, Scope.INLINE) != null;\n        if (isInlineEmbed) {\n          const [leaf] = parent.descendant(LeafBlot, index);\n          const formats = bubbleFormats(leaf);\n          attributes = AttributeMap.diff(formats, attributes) || {};\n        }\n      }\n    }\n    Object.keys(attributes).forEach((key) => {\n      parent.formatAt(index, length, key, attributes[key]);\n    });\n    return index + length;\n  }, index);\n}\n\nexport default Scroll;\n", "import { Scope } from 'parchment';\nimport type Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type Scroll from '../blots/scroll.js';\nimport type { Range } from '../core/selection.js';\n\nexport interface HistoryOptions {\n  userOnly: boolean;\n  delay: number;\n  maxStack: number;\n}\n\nexport interface StackItem {\n  delta: Delta;\n  range: Range | null;\n}\n\ninterface Stack {\n  undo: StackItem[];\n  redo: StackItem[];\n}\n\nclass History extends Module<HistoryOptions> {\n  static DEFAULTS: HistoryOptions = {\n    delay: 1000,\n    maxStack: 100,\n    userOnly: false,\n  };\n\n  lastRecorded = 0;\n  ignoreChange = false;\n  stack: Stack = { undo: [], redo: [] };\n  currentRange: Range | null = null;\n\n  constructor(quill: Quill, options: Partial<HistoryOptions>) {\n    super(quill, options);\n    this.quill.on(\n      Quill.events.EDITOR_CHANGE,\n      (eventName, value, oldValue, source) => {\n        if (eventName === Quill.events.SELECTION_CHANGE) {\n          if (value && source !== Quill.sources.SILENT) {\n            this.currentRange = value;\n          }\n        } else if (eventName === Quill.events.TEXT_CHANGE) {\n          if (!this.ignoreChange) {\n            if (!this.options.userOnly || source === Quill.sources.USER) {\n              this.record(value, oldValue);\n            } else {\n              this.transform(value);\n            }\n          }\n\n          this.currentRange = transformRange(this.currentRange, value);\n        }\n      },\n    );\n\n    this.quill.keyboard.addBinding(\n      { key: 'z', shortKey: true },\n      this.undo.bind(this),\n    );\n    this.quill.keyboard.addBinding(\n      { key: ['z', 'Z'], shortKey: true, shiftKey: true },\n      this.redo.bind(this),\n    );\n    if (/Win/i.test(navigator.platform)) {\n      this.quill.keyboard.addBinding(\n        { key: 'y', shortKey: true },\n        this.redo.bind(this),\n      );\n    }\n\n    this.quill.root.addEventListener('beforeinput', (event) => {\n      if (event.inputType === 'historyUndo') {\n        this.undo();\n        event.preventDefault();\n      } else if (event.inputType === 'historyRedo') {\n        this.redo();\n        event.preventDefault();\n      }\n    });\n  }\n\n  change(source: 'undo' | 'redo', dest: 'redo' | 'undo') {\n    if (this.stack[source].length === 0) return;\n    const item = this.stack[source].pop();\n    if (!item) return;\n    const base = this.quill.getContents();\n    const inverseDelta = item.delta.invert(base);\n    this.stack[dest].push({\n      delta: inverseDelta,\n      range: transformRange(item.range, inverseDelta),\n    });\n    this.lastRecorded = 0;\n    this.ignoreChange = true;\n    this.quill.updateContents(item.delta, Quill.sources.USER);\n    this.ignoreChange = false;\n\n    this.restoreSelection(item);\n  }\n\n  clear() {\n    this.stack = { undo: [], redo: [] };\n  }\n\n  cutoff() {\n    this.lastRecorded = 0;\n  }\n\n  record(changeDelta: Delta, oldDelta: Delta) {\n    if (changeDelta.ops.length === 0) return;\n    this.stack.redo = [];\n    let undoDelta = changeDelta.invert(oldDelta);\n    let undoRange = this.currentRange;\n    const timestamp = Date.now();\n    if (\n      // @ts-expect-error Fix me later\n      this.lastRecorded + this.options.delay > timestamp &&\n      this.stack.undo.length > 0\n    ) {\n      const item = this.stack.undo.pop();\n      if (item) {\n        undoDelta = undoDelta.compose(item.delta);\n        undoRange = item.range;\n      }\n    } else {\n      this.lastRecorded = timestamp;\n    }\n    if (undoDelta.length() === 0) return;\n    this.stack.undo.push({ delta: undoDelta, range: undoRange });\n    // @ts-expect-error Fix me later\n    if (this.stack.undo.length > this.options.maxStack) {\n      this.stack.undo.shift();\n    }\n  }\n\n  redo() {\n    this.change('redo', 'undo');\n  }\n\n  transform(delta: Delta) {\n    transformStack(this.stack.undo, delta);\n    transformStack(this.stack.redo, delta);\n  }\n\n  undo() {\n    this.change('undo', 'redo');\n  }\n\n  protected restoreSelection(stackItem: StackItem) {\n    if (stackItem.range) {\n      this.quill.setSelection(stackItem.range, Quill.sources.USER);\n    } else {\n      const index = getLastChangeIndex(this.quill.scroll, stackItem.delta);\n      this.quill.setSelection(index, Quill.sources.USER);\n    }\n  }\n}\n\nfunction transformStack(stack: StackItem[], delta: Delta) {\n  let remoteDelta = delta;\n  for (let i = stack.length - 1; i >= 0; i -= 1) {\n    const oldItem = stack[i];\n    stack[i] = {\n      delta: remoteDelta.transform(oldItem.delta, true),\n      range: oldItem.range && transformRange(oldItem.range, remoteDelta),\n    };\n    remoteDelta = oldItem.delta.transform(remoteDelta);\n    if (stack[i].delta.length() === 0) {\n      stack.splice(i, 1);\n    }\n  }\n}\n\nfunction endsWithNewlineChange(scroll: Scroll, delta: Delta) {\n  const lastOp = delta.ops[delta.ops.length - 1];\n  if (lastOp == null) return false;\n  if (lastOp.insert != null) {\n    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');\n  }\n  if (lastOp.attributes != null) {\n    return Object.keys(lastOp.attributes).some((attr) => {\n      return scroll.query(attr, Scope.BLOCK) != null;\n    });\n  }\n  return false;\n}\n\nfunction getLastChangeIndex(scroll: Scroll, delta: Delta) {\n  const deleteLength = delta.reduce((length, op) => {\n    return length + (op.delete || 0);\n  }, 0);\n  let changeIndex = delta.length() - deleteLength;\n  if (endsWithNewlineChange(scroll, delta)) {\n    changeIndex -= 1;\n  }\n  return changeIndex;\n}\n\nfunction transformRange(range: Range | null, delta: Delta) {\n  if (!range) return range;\n  const start = delta.transformPosition(range.index);\n  const end = delta.transformPosition(range.index + range.length);\n  return { index: start, length: end - start };\n}\n\nexport { History as default, getLastChangeIndex };\n", "import Delta from 'quill-delta';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\ninterface UploaderOptions {\n  mimetypes: string[];\n  handler: (this: { quill: Quill }, range: Range, files: File[]) => void;\n}\n\nclass Uploader extends Module<UploaderOptions> {\n  static DEFAULTS: UploaderOptions;\n\n  constructor(quill: Quill, options: Partial<UploaderOptions>) {\n    super(quill, options);\n    quill.root.addEventListener('drop', (e) => {\n      e.preventDefault();\n      let native: ReturnType<typeof document.createRange> | null = null;\n      if (document.caretRangeFromPoint) {\n        native = document.caretRangeFromPoint(e.clientX, e.clientY);\n        // @ts-expect-error\n      } else if (document.caretPositionFromPoint) {\n        // @ts-expect-error\n        const position = document.caretPositionFromPoint(e.clientX, e.clientY);\n        native = document.createRange();\n        native.setStart(position.offsetNode, position.offset);\n        native.setEnd(position.offsetNode, position.offset);\n      }\n\n      const normalized = native && quill.selection.normalizeNative(native);\n      if (normalized) {\n        const range = quill.selection.normalizedToRange(normalized);\n        if (e.dataTransfer?.files) {\n          this.upload(range, e.dataTransfer.files);\n        }\n      }\n    });\n  }\n\n  upload(range: Range, files: FileList | File[]) {\n    const uploads: File[] = [];\n    Array.from(files).forEach((file) => {\n      if (file && this.options.mimetypes?.includes(file.type)) {\n        uploads.push(file);\n      }\n    });\n    if (uploads.length > 0) {\n      // @ts-expect-error Fix me later\n      this.options.handler.call(this, range, uploads);\n    }\n  }\n}\n\nUploader.DEFAULTS = {\n  mimetypes: ['image/png', 'image/jpeg'],\n  handler(range: Range, files: File[]) {\n    if (!this.quill.scroll.query('image')) {\n      return;\n    }\n    const promises = files.map<Promise<string>>((file) => {\n      return new Promise((resolve) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result as string);\n        };\n        reader.readAsDataURL(file);\n      });\n    });\n    Promise.all(promises).then((images) => {\n      const update = images.reduce((delta: Delta, image) => {\n        return delta.insert({ image });\n      }, new Delta().retain(range.index).delete(range.length)) as Delta;\n      this.quill.updateContents(update, Emitter.sources.USER);\n      this.quill.setSelection(\n        range.index + images.length,\n        Emitter.sources.SILENT,\n      );\n    });\n  },\n};\n\nexport default Uploader;\n", "import Quill, { Parchment, Range } from './core/quill.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core/quill.js';\n\nimport Block, { BlockEmbed } from './blots/block.js';\nimport Break from './blots/break.js';\nimport Container from './blots/container.js';\nimport Cursor from './blots/cursor.js';\nimport Embed from './blots/embed.js';\nimport Inline from './blots/inline.js';\nimport Scroll from './blots/scroll.js';\nimport TextBlot from './blots/text.js';\n\nimport Clipboard from './modules/clipboard.js';\nimport History from './modules/history.js';\nimport Keyboard from './modules/keyboard.js';\nimport Uploader from './modules/uploader.js';\nimport Delta, { Op, OpIterator, AttributeMap } from 'quill-delta';\nimport Input from './modules/input.js';\nimport UINode from './modules/uiNode.js';\n\nexport { default as Module } from './core/module.js';\nexport { Delta, Op, OpIterator, AttributeMap, Parchment, Range };\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nQuill.register({\n  'blots/block': Block,\n  'blots/block/embed': BlockEmbed,\n  'blots/break': Break,\n  'blots/container': Container,\n  'blots/cursor': Cursor,\n  'blots/embed': Embed,\n  'blots/inline': Inline,\n  'blots/scroll': Scroll,\n  'blots/text': TextBlot,\n\n  'modules/clipboard': Clipboard,\n  'modules/history': History,\n  'modules/keyboard': Keyboard,\n  'modules/uploader': Uploader,\n  'modules/input': Input,\n  'modules/uiNode': UINode,\n});\n\nexport default Quill;\n", "import Delta from 'quill-delta';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\nimport type { Range } from '../core/selection.js';\nimport { deleteRange } from './keyboard.js';\n\nconst INSERT_TYPES = ['insertText', 'insertReplacementText'];\n\nclass Input extends Module {\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    quill.root.addEventListener('beforeinput', (event) => {\n      this.handleBeforeInput(event);\n    });\n\n    // Gboard with English input on Android triggers `compositionstart` sometimes even\n    // users are not going to type anything.\n    if (!/Android/i.test(navigator.userAgent)) {\n      quill.on(Quill.events.COMPOSITION_BEFORE_START, () => {\n        this.handleCompositionStart();\n      });\n    }\n  }\n\n  private deleteRange(range: Range) {\n    deleteRange({ range, quill: this.quill });\n  }\n\n  private replaceText(range: Range, text = '') {\n    if (range.length === 0) return false;\n\n    if (text) {\n      // Follow the native behavior that inherits the formats of the first character\n      const formats = this.quill.getFormat(range.index, 1);\n      this.deleteRange(range);\n      this.quill.updateContents(\n        new Delta().retain(range.index).insert(text, formats),\n        Quill.sources.USER,\n      );\n    } else {\n      this.deleteRange(range);\n    }\n\n    this.quill.setSelection(range.index + text.length, 0, Quill.sources.SILENT);\n    return true;\n  }\n\n  private handleBeforeInput(event: InputEvent) {\n    if (\n      this.quill.composition.isComposing ||\n      event.defaultPrevented ||\n      !INSERT_TYPES.includes(event.inputType)\n    ) {\n      return;\n    }\n\n    const staticRange = event.getTargetRanges\n      ? event.getTargetRanges()[0]\n      : null;\n    if (!staticRange || staticRange.collapsed === true) {\n      return;\n    }\n\n    const text = getPlainTextFromInputEvent(event);\n    if (text == null) {\n      return;\n    }\n    const normalized = this.quill.selection.normalizeNative(staticRange);\n    const range = normalized\n      ? this.quill.selection.normalizedToRange(normalized)\n      : null;\n    if (range && this.replaceText(range, text)) {\n      event.preventDefault();\n    }\n  }\n\n  private handleCompositionStart() {\n    const range = this.quill.getSelection();\n    if (range) {\n      this.replaceText(range);\n    }\n  }\n}\n\nfunction getPlainTextFromInputEvent(event: InputEvent) {\n  // When `inputType` is \"insertText\":\n  // - `event.data` should be string (Safari uses `event.dataTransfer`).\n  // - `event.dataTransfer` should be null.\n  // When `inputType` is \"insertReplacementText\":\n  // - `event.data` should be null.\n  // - `event.dataTransfer` should contain \"text/plain\" data.\n\n  if (typeof event.data === 'string') {\n    return event.data;\n  }\n  if (event.dataTransfer?.types.includes('text/plain')) {\n    return event.dataTransfer.getData('text/plain');\n  }\n  return null;\n}\n\nexport default Input;\n", "import { ParentBlot } from 'parchment';\nimport Module from '../core/module.js';\nimport Quill from '../core/quill.js';\n\nconst isMac = /Mac/i.test(navigator.platform);\n\n// Export for testing\nexport const TTL_FOR_VALID_SELECTION_CHANGE = 100;\n\n// A loose check to determine if the shortcut can move the caret before a UI node:\n// <ANY_PARENT>[CARET]<div class=\"ql-ui\"></div>[CONTENT]</ANY_PARENT>\nconst canMoveCaretBeforeUINode = (event: KeyboardEvent) => {\n  if (\n    event.key === 'ArrowLeft' ||\n    event.key === 'ArrowRight' || // RTL scripts or moving from the end of the previous line\n    event.key === 'ArrowUp' ||\n    event.key === 'ArrowDown' ||\n    event.key === 'Home'\n  ) {\n    return true;\n  }\n\n  if (isMac && event.key === 'a' && event.ctrlKey === true) {\n    return true;\n  }\n\n  return false;\n};\n\nclass UINode extends Module {\n  isListening = false;\n  selectionChangeDeadline = 0;\n\n  constructor(quill: Quill, options: Record<string, never>) {\n    super(quill, options);\n\n    this.handleArrowKeys();\n    this.handleNavigationShortcuts();\n  }\n\n  private handleArrowKeys() {\n    this.quill.keyboard.addBinding({\n      key: ['ArrowLeft', 'ArrowRight'],\n      offset: 0,\n      shiftKey: null,\n      handler(range, { line, event }) {\n        if (!(line instanceof ParentBlot) || !line.uiNode) {\n          return true;\n        }\n\n        const isRTL = getComputedStyle(line.domNode)['direction'] === 'rtl';\n        if (\n          (isRTL && event.key !== 'ArrowRight') ||\n          (!isRTL && event.key !== 'ArrowLeft')\n        ) {\n          return true;\n        }\n\n        this.quill.setSelection(\n          range.index - 1,\n          range.length + (event.shiftKey ? 1 : 0),\n          Quill.sources.USER,\n        );\n        return false;\n      },\n    });\n  }\n\n  private handleNavigationShortcuts() {\n    this.quill.root.addEventListener('keydown', (event) => {\n      if (!event.defaultPrevented && canMoveCaretBeforeUINode(event)) {\n        this.ensureListeningToSelectionChange();\n      }\n    });\n  }\n\n  /**\n   * We only listen to the `selectionchange` event when\n   * there is an intention of moving the caret to the beginning using shortcuts.\n   * This is primarily implemented to prevent infinite loops, as we are changing\n   * the selection within the handler of a `selectionchange` event.\n   */\n  private ensureListeningToSelectionChange() {\n    this.selectionChangeDeadline = Date.now() + TTL_FOR_VALID_SELECTION_CHANGE;\n\n    if (this.isListening) return;\n    this.isListening = true;\n\n    const listener = () => {\n      this.isListening = false;\n\n      if (Date.now() <= this.selectionChangeDeadline) {\n        this.handleSelectionChange();\n      }\n    };\n\n    document.addEventListener('selectionchange', listener, {\n      once: true,\n    });\n  }\n\n  private handleSelectionChange() {\n    const selection = document.getSelection();\n    if (!selection) return;\n    const range = selection.getRangeAt(0);\n    if (range.collapsed !== true || range.startOffset !== 0) return;\n\n    const line = this.quill.scroll.find(range.startContainer);\n    if (!(line instanceof ParentBlot) || !line.uiNode) return;\n\n    const newRange = document.createRange();\n    newRange.setStartAfter(line.uiNode);\n    newRange.setEndAfter(line.uiNode);\n    selection.removeAllRanges();\n    selection.addRange(newRange);\n  }\n}\n\nexport default UINode;\n", "import { ClassAttributor, Scope } from 'parchment';\n\nclass IndentAttributor extends ClassAttributor {\n  add(node: HTMLElement, value: string | number) {\n    let normalizedValue = 0;\n    if (value === '+1' || value === '-1') {\n      const indent = this.value(node) || 0;\n      normalizedValue = value === '+1' ? indent + 1 : indent - 1;\n    } else if (typeof value === 'number') {\n      normalizedValue = value;\n    }\n    if (normalizedValue === 0) {\n      this.remove(node);\n      return true;\n    }\n    return super.add(node, normalizedValue.toString());\n  }\n\n  canAdd(node: HTMLElement, value: string) {\n    return super.canAdd(node, value) || super.canAdd(node, parseInt(value, 10));\n  }\n\n  value(node: HTMLElement) {\n    return parseInt(super.value(node), 10) || undefined; // Don't return NaN\n  }\n}\n\nconst IndentClass = new IndentAttributor('indent', 'ql-indent', {\n  scope: Scope.BLOCK,\n  // @ts-expect-error\n  whitelist: [1, 2, 3, 4, 5, 6, 7, 8],\n});\n\nexport default IndentClass;\n", "import Block from '../blots/block.js';\n\nclass Blockquote extends Block {\n  static blotName = 'blockquote';\n  static tagName = 'blockquote';\n}\n\nexport default Blockquote;\n", "import Block from '../blots/block.js';\n\nclass Header extends Block {\n  static blotName = 'header';\n  static tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n\n  static formats(domNode: Element) {\n    return this.tagName.indexOf(domNode.tagName) + 1;\n  }\n}\n\nexport default Header;\n", "import Block from '../blots/block.js';\nimport Container from '../blots/container.js';\nimport type Scroll from '../blots/scroll.js';\nimport Quill from '../core/quill.js';\n\nclass ListContainer extends Container {}\nListContainer.blotName = 'list-container';\nListContainer.tagName = 'OL';\n\nclass ListItem extends Block {\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    node.setAttribute('data-list', value);\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('data-list') || undefined;\n  }\n\n  static register() {\n    Quill.register(ListContainer);\n  }\n\n  constructor(scroll: Scroll, domNode: HTMLElement) {\n    super(scroll, domNode);\n    const ui = domNode.ownerDocument.createElement('span');\n    const listEventHandler = (e: Event) => {\n      if (!scroll.isEnabled()) return;\n      const format = this.statics.formats(domNode, scroll);\n      if (format === 'checked') {\n        this.format('list', 'unchecked');\n        e.preventDefault();\n      } else if (format === 'unchecked') {\n        this.format('list', 'checked');\n        e.preventDefault();\n      }\n    };\n    ui.addEventListener('mousedown', listEventHandler);\n    ui.addEventListener('touchstart', listEventHandler);\n    this.attachUI(ui);\n  }\n\n  format(name: string, value: string) {\n    if (name === this.statics.blotName && value) {\n      this.domNode.setAttribute('data-list', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n}\nListItem.blotName = 'list';\nListItem.tagName = 'LI';\n\nListContainer.allowedChildren = [ListItem];\nListItem.requiredContainer = ListContainer;\n\nexport { ListContainer, ListItem as default };\n", "import Inline from '../blots/inline.js';\n\nclass Bold extends Inline {\n  static blotName = 'bold';\n  static tagName = ['STRONG', 'B'];\n\n  static create() {\n    return super.create();\n  }\n\n  static formats() {\n    return true;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    if (this.domNode.tagName !== this.statics.tagName[0]) {\n      this.replaceWith(this.statics.blotName);\n    }\n  }\n}\n\nexport default Bold;\n", "import Bold from './bold.js';\n\nclass Italic extends Bold {\n  static blotName = 'italic';\n  static tagName = ['EM', 'I'];\n}\n\nexport default Italic;\n", "import Inline from '../blots/inline.js';\n\nclass Link extends Inline {\n  static blotName = 'link';\n  static tagName = 'A';\n  static SANITIZED_URL = 'about:blank';\n  static PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel', 'sms'];\n\n  static create(value: string) {\n    const node = super.create(value) as HTMLElement;\n    node.setAttribute('href', this.sanitize(value));\n    node.setAttribute('rel', 'noopener noreferrer');\n    node.setAttribute('target', '_blank');\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    return domNode.getAttribute('href');\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;\n  }\n\n  format(name: string, value: unknown) {\n    if (name !== this.statics.blotName || !value) {\n      super.format(name, value);\n    } else {\n      // @ts-expect-error\n      this.domNode.setAttribute('href', this.constructor.sanitize(value));\n    }\n  }\n}\n\nfunction sanitize(url: string, protocols: string[]) {\n  const anchor = document.createElement('a');\n  anchor.href = url;\n  const protocol = anchor.href.slice(0, anchor.href.indexOf(':'));\n  return protocols.indexOf(protocol) > -1;\n}\n\nexport { Link as default, sanitize };\n", "import Inline from '../blots/inline.js';\n\nclass Script extends Inline {\n  static blotName = 'script';\n  static tagName = ['SUB', 'SUP'];\n\n  static create(value: 'super' | 'sub' | (string & {})) {\n    if (value === 'super') {\n      return document.createElement('sup');\n    }\n    if (value === 'sub') {\n      return document.createElement('sub');\n    }\n    return super.create(value);\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.tagName === 'SUB') return 'sub';\n    if (domNode.tagName === 'SUP') return 'super';\n    return undefined;\n  }\n}\n\nexport default Script;\n", "import Bold from './bold.js';\n\nclass Strike extends Bold {\n  static blotName = 'strike';\n  static tagName = ['S', 'STRIKE'];\n}\n\nexport default Strike;\n", "import Inline from '../blots/inline.js';\n\nclass Underline extends Inline {\n  static blotName = 'underline';\n  static tagName = 'U';\n}\n\nexport default Underline;\n", "import Embed from '../blots/embed.js';\n\nclass Formula extends Embed {\n  static blotName = 'formula';\n  static className = 'ql-formula';\n  static tagName = 'SPAN';\n\n  static create(value: string) {\n    // @ts-expect-error\n    if (window.katex == null) {\n      throw new Error('Formula module requires KaTeX.');\n    }\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      // @ts-expect-error\n      window.katex.render(value, node, {\n        throwOnError: false,\n        errorColor: '#f00',\n      });\n      node.setAttribute('data-value', value);\n    }\n    return node;\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('data-value');\n  }\n\n  html() {\n    const { formula } = this.value();\n    return `<span>${formula}</span>`;\n  }\n}\n\nexport default Formula;\n", "import { EmbedBlot } from 'parchment';\nimport { sanitize } from './link.js';\n\nconst ATTRIBUTES = ['alt', 'height', 'width'];\n\nclass Image extends EmbedBlot {\n  static blotName = 'image';\n  static tagName = 'IMG';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    if (typeof value === 'string') {\n      node.setAttribute('src', this.sanitize(value));\n    }\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static match(url: string) {\n    return /\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url);\n  }\n\n  static sanitize(url: string) {\n    return sanitize(url, ['http', 'https', 'data']) ? url : '//:0';\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLImageElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n}\n\nexport default Image;\n", "import { BlockEmbed } from '../blots/block.js';\nimport Link from './link.js';\n\nconst ATTRIBUTES = ['height', 'width'];\n\nclass Video extends BlockEmbed {\n  static blotName = 'video';\n  static className = 'ql-video';\n  static tagName = 'IFRAME';\n\n  static create(value: string) {\n    const node = super.create(value) as Element;\n    node.setAttribute('frameborder', '0');\n    node.setAttribute('allowfullscreen', 'true');\n    node.setAttribute('src', this.sanitize(value));\n    return node;\n  }\n\n  static formats(domNode: Element) {\n    return ATTRIBUTES.reduce(\n      (formats: Record<string, string | null>, attribute) => {\n        if (domNode.hasAttribute(attribute)) {\n          formats[attribute] = domNode.getAttribute(attribute);\n        }\n        return formats;\n      },\n      {},\n    );\n  }\n\n  static sanitize(url: string) {\n    return Link.sanitize(url);\n  }\n\n  static value(domNode: Element) {\n    return domNode.getAttribute('src');\n  }\n\n  domNode: HTMLVideoElement;\n\n  format(name: string, value: string) {\n    if (ATTRIBUTES.indexOf(name) > -1) {\n      if (value) {\n        this.domNode.setAttribute(name, value);\n      } else {\n        this.domNode.removeAttribute(name);\n      }\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  html() {\n    const { video } = this.value();\n    return `<a href=\"${video}\">${video}</a>`;\n  }\n}\n\nexport default Video;\n", "import Delta from 'quill-delta';\nimport Quill from '../core/quill.js';\nimport Module from '../core/module.js';\nimport {\n  TableCell,\n  TableRow,\n  TableBody,\n  TableContainer,\n  tableId,\n} from '../formats/table.js';\n\nclass Table extends Module {\n  static register() {\n    Quill.register(TableCell);\n    Quill.register(TableRow);\n    Quill.register(TableBody);\n    Quill.register(TableContainer);\n  }\n\n  constructor(...args: ConstructorParameters<typeof Module>) {\n    super(...args);\n    this.listenBalanceCells();\n  }\n\n  balanceTables() {\n    this.quill.scroll.descendants(TableContainer).forEach((table) => {\n      table.balanceCells();\n    });\n  }\n\n  deleteColumn() {\n    const [table, , cell] = this.getTable();\n    if (cell == null) return;\n    // @ts-expect-error\n    table.deleteColumn(cell.cellOffset());\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteRow() {\n    const [, row] = this.getTable();\n    if (row == null) return;\n    row.remove();\n    this.quill.update(Quill.sources.USER);\n  }\n\n  deleteTable() {\n    const [table] = this.getTable();\n    if (table == null) return;\n    // @ts-expect-error\n    const offset = table.offset();\n    // @ts-expect-error\n    table.remove();\n    this.quill.update(Quill.sources.USER);\n    this.quill.setSelection(offset, Quill.sources.SILENT);\n  }\n\n  getTable(\n    range = this.quill.getSelection(),\n  ): [null, null, null, -1] | [Table, TableRow, TableCell, number] {\n    if (range == null) return [null, null, null, -1];\n    const [cell, offset] = this.quill.getLine(range.index);\n    if (cell == null || cell.statics.blotName !== TableCell.blotName) {\n      return [null, null, null, -1];\n    }\n    const row = cell.parent;\n    const table = row.parent.parent;\n    // @ts-expect-error\n    return [table, row, cell, offset];\n  }\n\n  insertColumn(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const column = cell.cellOffset();\n    table.insertColumn(column + offset);\n    this.quill.update(Quill.sources.USER);\n    let shift = row.rowOffset();\n    if (offset === 0) {\n      shift += 1;\n    }\n    this.quill.setSelection(\n      range.index + shift,\n      range.length,\n      Quill.sources.SILENT,\n    );\n  }\n\n  insertColumnLeft() {\n    this.insertColumn(0);\n  }\n\n  insertColumnRight() {\n    this.insertColumn(1);\n  }\n\n  insertRow(offset: number) {\n    const range = this.quill.getSelection();\n    if (!range) return;\n    const [table, row, cell] = this.getTable(range);\n    if (cell == null) return;\n    const index = row.rowOffset();\n    table.insertRow(index + offset);\n    this.quill.update(Quill.sources.USER);\n    if (offset > 0) {\n      this.quill.setSelection(range, Quill.sources.SILENT);\n    } else {\n      this.quill.setSelection(\n        range.index + row.children.length,\n        range.length,\n        Quill.sources.SILENT,\n      );\n    }\n  }\n\n  insertRowAbove() {\n    this.insertRow(0);\n  }\n\n  insertRowBelow() {\n    this.insertRow(1);\n  }\n\n  insertTable(rows: number, columns: number) {\n    const range = this.quill.getSelection();\n    if (range == null) return;\n    const delta = new Array(rows).fill(0).reduce((memo) => {\n      const text = new Array(columns).fill('\\n').join('');\n      return memo.insert(text, { table: tableId() });\n    }, new Delta().retain(range.index));\n    this.quill.updateContents(delta, Quill.sources.USER);\n    this.quill.setSelection(range.index, Quill.sources.SILENT);\n    this.balanceTables();\n  }\n\n  listenBalanceCells() {\n    this.quill.on(\n      Quill.events.SCROLL_OPTIMIZE,\n      (mutations: MutationRecord[]) => {\n        mutations.some((mutation) => {\n          if (\n            ['TD', 'TR', 'TBODY', 'TABLE'].includes(\n              (mutation.target as HTMLElement).tagName,\n            )\n          ) {\n            this.quill.once(Quill.events.TEXT_CHANGE, (delta, old, source) => {\n              if (source !== Quill.sources.USER) return;\n              this.balanceTables();\n            });\n            return true;\n          }\n          return false;\n        });\n      },\n    );\n  }\n}\n\nexport default Table;\n", "import type { LinkedList } from 'parchment';\nimport Block from '../blots/block.js';\nimport Container from '../blots/container.js';\n\nclass TableCell extends Block {\n  static blotName = 'table';\n  static tagName = 'TD';\n\n  static create(value: string) {\n    const node = super.create() as HTMLElement;\n    if (value) {\n      node.setAttribute('data-row', value);\n    } else {\n      node.setAttribute('data-row', tableId());\n    }\n    return node;\n  }\n\n  static formats(domNode: HTMLElement) {\n    if (domNode.hasAttribute('data-row')) {\n      return domNode.getAttribute('data-row');\n    }\n    return undefined;\n  }\n\n  next: this | null;\n\n  cellOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  format(name: string, value: string) {\n    if (name === TableCell.blotName && value) {\n      this.domNode.setAttribute('data-row', value);\n    } else {\n      super.format(name, value);\n    }\n  }\n\n  row(): TableRow {\n    return this.parent as TableRow;\n  }\n\n  rowOffset() {\n    if (this.row()) {\n      return this.row().rowOffset();\n    }\n    return -1;\n  }\n\n  table() {\n    return this.row() && this.row().table();\n  }\n}\n\nclass TableRow extends Container {\n  static blotName = 'table-row';\n  static tagName = 'TR';\n\n  children: LinkedList<TableCell>;\n  next: this | null;\n\n  checkMerge() {\n    // @ts-expect-error\n    if (super.checkMerge() && this.next.children.head != null) {\n      // @ts-expect-error\n      const thisHead = this.children.head.formats();\n      // @ts-expect-error\n      const thisTail = this.children.tail.formats();\n      // @ts-expect-error\n      const nextHead = this.next.children.head.formats();\n      // @ts-expect-error\n      const nextTail = this.next.children.tail.formats();\n      return (\n        thisHead.table === thisTail.table &&\n        thisHead.table === nextHead.table &&\n        thisHead.table === nextTail.table\n      );\n    }\n    return false;\n  }\n\n  optimize(context: { [key: string]: any }) {\n    super.optimize(context);\n    this.children.forEach((child) => {\n      if (child.next == null) return;\n      const childFormats = child.formats();\n      const nextFormats = child.next.formats();\n      if (childFormats.table !== nextFormats.table) {\n        const next = this.splitAfter(child);\n        if (next) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          next.optimize();\n        }\n        // We might be able to merge with prev now\n        if (this.prev) {\n          // @ts-expect-error TODO: parameters of optimize() should be a optional\n          this.prev.optimize();\n        }\n      }\n    });\n  }\n\n  rowOffset() {\n    if (this.parent) {\n      return this.parent.children.indexOf(this);\n    }\n    return -1;\n  }\n\n  table() {\n    return this.parent && this.parent.parent;\n  }\n}\n\nclass TableBody extends Container {\n  static blotName = 'table-body';\n  static tagName = 'TBODY';\n\n  children: LinkedList<TableRow>;\n}\n\nclass TableContainer extends Container {\n  static blotName = 'table-container';\n  static tagName = 'TABLE';\n\n  children: LinkedList<TableBody>;\n\n  balanceCells() {\n    const rows = this.descendants(TableRow);\n    const maxColumns = rows.reduce((max, row) => {\n      return Math.max(row.children.length, max);\n    }, 0);\n    rows.forEach((row) => {\n      new Array(maxColumns - row.children.length).fill(0).forEach(() => {\n        let value;\n        if (row.children.head != null) {\n          value = TableCell.formats(row.children.head.domNode);\n        }\n        const blot = this.scroll.create(TableCell.blotName, value);\n        row.appendChild(blot);\n        // @ts-expect-error TODO: parameters of optimize() should be a optional\n        blot.optimize(); // Add break blot\n      });\n    });\n  }\n\n  cells(column: number) {\n    return this.rows().map((row) => row.children.at(column));\n  }\n\n  deleteColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const cell = row.children.at(index);\n      if (cell != null) {\n        cell.remove();\n      }\n    });\n  }\n\n  insertColumn(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    body.children.forEach((row) => {\n      const ref = row.children.at(index);\n      // @ts-expect-error\n      const value = TableCell.formats(row.children.head.domNode);\n      const cell = this.scroll.create(TableCell.blotName, value);\n      row.insertBefore(cell, ref);\n    });\n  }\n\n  insertRow(index: number) {\n    // @ts-expect-error\n    const [body] = this.descendant(TableBody) as TableBody[];\n    if (body == null || body.children.head == null) return;\n    const id = tableId();\n    const row = this.scroll.create(TableRow.blotName) as TableRow;\n    body.children.head.children.forEach(() => {\n      const cell = this.scroll.create(TableCell.blotName, id);\n      row.appendChild(cell);\n    });\n    const ref = body.children.at(index);\n    body.insertBefore(row, ref);\n  }\n\n  rows() {\n    const body = this.children.head;\n    if (body == null) return [];\n    return body.children.map((row) => row);\n  }\n}\n\nTableContainer.allowedChildren = [TableBody];\nTableBody.requiredContainer = TableContainer;\n\nTableBody.allowedChildren = [TableRow];\nTableRow.requiredContainer = TableBody;\n\nTableRow.allowedChildren = [TableCell];\nTableCell.requiredContainer = TableRow;\n\nfunction tableId() {\n  const id = Math.random().toString(36).slice(2, 6);\n  return `row-${id}`;\n}\n\nexport { TableCell, TableRow, TableBody, TableContainer, tableId };\n", "import Delta from 'quill-delta';\nimport { EmbedBlot, Scope } from 'parchment';\nimport Quill from '../core/quill.js';\nimport logger from '../core/logger.js';\nimport Module from '../core/module.js';\nimport type { Range } from '../core/selection.js';\n\nconst debug = logger('quill:toolbar');\n\ntype Handler = (this: Toolbar, value: any) => void;\n\nexport type ToolbarConfig = Array<\n  string[] | Array<string | Record<string, unknown>>\n>;\nexport interface ToolbarProps {\n  container?: HTMLElement | ToolbarConfig | null;\n  handlers?: Record<string, Handler>;\n  option?: number;\n  module?: boolean;\n  theme?: boolean;\n}\n\nclass Toolbar extends Module<ToolbarProps> {\n  static DEFAULTS: ToolbarProps;\n\n  container?: HTMLElement | null;\n  controls: [string, HTMLElement][];\n  handlers: Record<string, Handler>;\n\n  constructor(quill: Quill, options: Partial<ToolbarProps>) {\n    super(quill, options);\n    if (Array.isArray(this.options.container)) {\n      const container = document.createElement('div');\n      container.setAttribute('role', 'toolbar');\n      addControls(container, this.options.container);\n      quill.container?.parentNode?.insertBefore(container, quill.container);\n      this.container = container;\n    } else if (typeof this.options.container === 'string') {\n      this.container = document.querySelector(this.options.container);\n    } else {\n      this.container = this.options.container;\n    }\n    if (!(this.container instanceof HTMLElement)) {\n      debug.error('Container required for toolbar', this.options);\n      return;\n    }\n    this.container.classList.add('ql-toolbar');\n    this.controls = [];\n    this.handlers = {};\n    if (this.options.handlers) {\n      Object.keys(this.options.handlers).forEach((format) => {\n        const handler = this.options.handlers?.[format];\n        if (handler) {\n          this.addHandler(format, handler);\n        }\n      });\n    }\n    Array.from(this.container.querySelectorAll('button, select')).forEach(\n      (input) => {\n        // @ts-expect-error\n        this.attach(input);\n      },\n    );\n    this.quill.on(Quill.events.EDITOR_CHANGE, () => {\n      const [range] = this.quill.selection.getRange(); // quill.getSelection triggers update\n      this.update(range);\n    });\n  }\n\n  addHandler(format: string, handler: Handler) {\n    this.handlers[format] = handler;\n  }\n\n  attach(input: HTMLElement) {\n    let format = Array.from(input.classList).find((className) => {\n      return className.indexOf('ql-') === 0;\n    });\n    if (!format) return;\n    format = format.slice('ql-'.length);\n    if (input.tagName === 'BUTTON') {\n      input.setAttribute('type', 'button');\n    }\n    if (\n      this.handlers[format] == null &&\n      this.quill.scroll.query(format) == null\n    ) {\n      debug.warn('ignoring attaching to nonexistent format', format, input);\n      return;\n    }\n    const eventName = input.tagName === 'SELECT' ? 'change' : 'click';\n    input.addEventListener(eventName, (e) => {\n      let value;\n      if (input.tagName === 'SELECT') {\n        // @ts-expect-error\n        if (input.selectedIndex < 0) return;\n        // @ts-expect-error\n        const selected = input.options[input.selectedIndex];\n        if (selected.hasAttribute('selected')) {\n          value = false;\n        } else {\n          value = selected.value || false;\n        }\n      } else {\n        if (input.classList.contains('ql-active')) {\n          value = false;\n        } else {\n          // @ts-expect-error\n          value = input.value || !input.hasAttribute('value');\n        }\n        e.preventDefault();\n      }\n      this.quill.focus();\n      const [range] = this.quill.selection.getRange();\n      if (this.handlers[format] != null) {\n        this.handlers[format].call(this, value);\n      } else if (\n        // @ts-expect-error\n        this.quill.scroll.query(format).prototype instanceof EmbedBlot\n      ) {\n        value = prompt(`Enter ${format}`); // eslint-disable-line no-alert\n        if (!value) return;\n        this.quill.updateContents(\n          new Delta()\n            // @ts-expect-error Fix me later\n            .retain(range.index)\n            // @ts-expect-error Fix me later\n            .delete(range.length)\n            .insert({ [format]: value }),\n          Quill.sources.USER,\n        );\n      } else {\n        this.quill.format(format, value, Quill.sources.USER);\n      }\n      this.update(range);\n    });\n    this.controls.push([format, input]);\n  }\n\n  update(range: Range | null) {\n    const formats = range == null ? {} : this.quill.getFormat(range);\n    this.controls.forEach((pair) => {\n      const [format, input] = pair;\n      if (input.tagName === 'SELECT') {\n        let option: HTMLOptionElement | null = null;\n        if (range == null) {\n          option = null;\n        } else if (formats[format] == null) {\n          option = input.querySelector('option[selected]');\n        } else if (!Array.isArray(formats[format])) {\n          let value = formats[format];\n          if (typeof value === 'string') {\n            value = value.replace(/\"/g, '\\\\\"');\n          }\n          option = input.querySelector(`option[value=\"${value}\"]`);\n        }\n        if (option == null) {\n          // @ts-expect-error TODO fix me later\n          input.value = ''; // TODO make configurable?\n          // @ts-expect-error TODO fix me later\n          input.selectedIndex = -1;\n        } else {\n          option.selected = true;\n        }\n      } else if (range == null) {\n        input.classList.remove('ql-active');\n        input.setAttribute('aria-pressed', 'false');\n      } else if (input.hasAttribute('value')) {\n        // both being null should match (default values)\n        // '1' should match with 1 (headers)\n        const value = formats[format] as boolean | number | string | object;\n        const isActive =\n          value === input.getAttribute('value') ||\n          (value != null && value.toString() === input.getAttribute('value')) ||\n          (value == null && !input.getAttribute('value'));\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      } else {\n        const isActive = formats[format] != null;\n        input.classList.toggle('ql-active', isActive);\n        input.setAttribute('aria-pressed', isActive.toString());\n      }\n    });\n  }\n}\nToolbar.DEFAULTS = {};\n\nfunction addButton(container: HTMLElement, format: string, value?: string) {\n  const input = document.createElement('button');\n  input.setAttribute('type', 'button');\n  input.classList.add(`ql-${format}`);\n  input.setAttribute('aria-pressed', 'false');\n  if (value != null) {\n    input.value = value;\n    input.setAttribute('aria-label', `${format}: ${value}`);\n  } else {\n    input.setAttribute('aria-label', format);\n  }\n  container.appendChild(input);\n}\n\nfunction addControls(\n  container: HTMLElement,\n  groups:\n    | (string | Record<string, unknown>)[][]\n    | (string | Record<string, unknown>)[],\n) {\n  if (!Array.isArray(groups[0])) {\n    // @ts-expect-error\n    groups = [groups];\n  }\n  groups.forEach((controls: any) => {\n    const group = document.createElement('span');\n    group.classList.add('ql-formats');\n    controls.forEach((control: any) => {\n      if (typeof control === 'string') {\n        addButton(group, control);\n      } else {\n        const format = Object.keys(control)[0];\n        const value = control[format];\n        if (Array.isArray(value)) {\n          addSelect(group, format, value);\n        } else {\n          addButton(group, format, value);\n        }\n      }\n    });\n    container.appendChild(group);\n  });\n}\n\nfunction addSelect(\n  container: HTMLElement,\n  format: string,\n  values: Array<string | boolean>,\n) {\n  const input = document.createElement('select');\n  input.classList.add(`ql-${format}`);\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value !== false) {\n      option.setAttribute('value', String(value));\n    } else {\n      option.setAttribute('selected', 'selected');\n    }\n    input.appendChild(option);\n  });\n  container.appendChild(input);\n}\n\nToolbar.DEFAULTS = {\n  container: null,\n  handlers: {\n    clean() {\n      const range = this.quill.getSelection();\n      if (range == null) return;\n      if (range.length === 0) {\n        const formats = this.quill.getFormat();\n        Object.keys(formats).forEach((name) => {\n          // Clean functionality in existing apps only clean inline formats\n          if (this.quill.scroll.query(name, Scope.INLINE) != null) {\n            this.quill.format(name, false, Quill.sources.USER);\n          }\n        });\n      } else {\n        this.quill.removeFormat(range.index, range.length, Quill.sources.USER);\n      }\n    },\n    direction(value) {\n      const { align } = this.quill.getFormat();\n      if (value === 'rtl' && align == null) {\n        this.quill.format('align', 'right', Quill.sources.USER);\n      } else if (!value && align === 'right') {\n        this.quill.format('align', false, Quill.sources.USER);\n      }\n      this.quill.format('direction', value, Quill.sources.USER);\n    },\n    indent(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      // @ts-expect-error\n      const indent = parseInt(formats.indent || 0, 10);\n      if (value === '+1' || value === '-1') {\n        let modifier = value === '+1' ? 1 : -1;\n        if (formats.direction === 'rtl') modifier *= -1;\n        this.quill.format('indent', indent + modifier, Quill.sources.USER);\n      }\n    },\n    link(value) {\n      if (value === true) {\n        value = prompt('Enter link URL:'); // eslint-disable-line no-alert\n      }\n      this.quill.format('link', value, Quill.sources.USER);\n    },\n    list(value) {\n      const range = this.quill.getSelection();\n      // @ts-expect-error\n      const formats = this.quill.getFormat(range);\n      if (value === 'check') {\n        if (formats.list === 'checked' || formats.list === 'unchecked') {\n          this.quill.format('list', false, Quill.sources.USER);\n        } else {\n          this.quill.format('list', 'unchecked', Quill.sources.USER);\n        }\n      } else {\n        this.quill.format('list', value, Quill.sources.USER);\n      }\n    },\n  },\n};\n\nexport { Toolbar as default, addControls };\n", "import alignLeftIcon from '../assets/icons/align-left.svg';\nimport alignCenterIcon from '../assets/icons/align-center.svg';\nimport alignRightIcon from '../assets/icons/align-right.svg';\nimport alignJustifyIcon from '../assets/icons/align-justify.svg';\nimport backgroundIcon from '../assets/icons/background.svg';\nimport blockquoteIcon from '../assets/icons/blockquote.svg';\nimport boldIcon from '../assets/icons/bold.svg';\nimport cleanIcon from '../assets/icons/clean.svg';\nimport codeIcon from '../assets/icons/code.svg';\nimport colorIcon from '../assets/icons/color.svg';\nimport directionLeftToRightIcon from '../assets/icons/direction-ltr.svg';\nimport directionRightToLeftIcon from '../assets/icons/direction-rtl.svg';\nimport formulaIcon from '../assets/icons/formula.svg';\nimport headerIcon from '../assets/icons/header.svg';\nimport header2Icon from '../assets/icons/header-2.svg';\nimport header3Icon from '../assets/icons/header-3.svg';\nimport header4Icon from '../assets/icons/header-4.svg';\nimport header5Icon from '../assets/icons/header-5.svg';\nimport header6Icon from '../assets/icons/header-6.svg';\nimport italicIcon from '../assets/icons/italic.svg';\nimport imageIcon from '../assets/icons/image.svg';\nimport indentIcon from '../assets/icons/indent.svg';\nimport outdentIcon from '../assets/icons/outdent.svg';\nimport linkIcon from '../assets/icons/link.svg';\nimport listBulletIcon from '../assets/icons/list-bullet.svg';\nimport listCheckIcon from '../assets/icons/list-check.svg';\nimport listOrderedIcon from '../assets/icons/list-ordered.svg';\nimport subscriptIcon from '../assets/icons/subscript.svg';\nimport superscriptIcon from '../assets/icons/superscript.svg';\nimport strikeIcon from '../assets/icons/strike.svg';\nimport tableIcon from '../assets/icons/table.svg';\nimport underlineIcon from '../assets/icons/underline.svg';\nimport videoIcon from '../assets/icons/video.svg';\n\nexport default {\n  align: {\n    '': alignLeftIcon,\n    center: alignCenterIcon,\n    right: alignRightIcon,\n    justify: alignJustifyIcon,\n  },\n  background: backgroundIcon,\n  blockquote: blockquoteIcon,\n  bold: boldIcon,\n  clean: cleanIcon,\n  code: codeIcon,\n  'code-block': codeIcon,\n  color: colorIcon,\n  direction: {\n    '': directionLeftToRightIcon,\n    rtl: directionRightToLeftIcon,\n  },\n  formula: formulaIcon,\n  header: {\n    '1': headerIcon,\n    '2': header2Icon,\n    '3': header3Icon,\n    '4': header4Icon,\n    '5': header5Icon,\n    '6': header6Icon,\n  },\n  italic: italicIcon,\n  image: imageIcon,\n  indent: {\n    '+1': indentIcon,\n    '-1': outdentIcon,\n  },\n  link: linkIcon,\n  list: {\n    bullet: listBulletIcon,\n    check: listCheckIcon,\n    ordered: listOrderedIcon,\n  },\n  script: {\n    sub: subscriptIcon,\n    super: superscriptIcon,\n  },\n  strike: strikeIcon,\n  table: tableIcon,\n  underline: underlineIcon,\n  video: videoIcon,\n};\n", "import DropdownIcon from '../assets/icons/dropdown.svg';\n\nlet optionsCounter = 0;\n\nfunction toggleAriaAttribute(element: HTMLElement, attribute: string) {\n  element.setAttribute(\n    attribute,\n    `${!(element.getAttribute(attribute) === 'true')}`,\n  );\n}\n\nclass Picker {\n  select: HTMLSelectElement;\n  container: HTMLElement;\n  label: HTMLElement;\n\n  constructor(select: HTMLSelectElement) {\n    this.select = select;\n    this.container = document.createElement('span');\n    this.buildPicker();\n    this.select.style.display = 'none';\n    // @ts-expect-error Fix me later\n    this.select.parentNode.insertBefore(this.container, this.select);\n\n    this.label.addEventListener('mousedown', () => {\n      this.togglePicker();\n    });\n    this.label.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.togglePicker();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n    this.select.addEventListener('change', this.update.bind(this));\n  }\n\n  togglePicker() {\n    this.container.classList.toggle('ql-expanded');\n    // Toggle aria-expanded and aria-hidden to make the picker accessible\n    toggleAriaAttribute(this.label, 'aria-expanded');\n    // @ts-expect-error\n    toggleAriaAttribute(this.options, 'aria-hidden');\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = document.createElement('span');\n    // @ts-expect-error\n    item.tabIndex = '0';\n    item.setAttribute('role', 'button');\n    item.classList.add('ql-picker-item');\n    const value = option.getAttribute('value');\n    if (value) {\n      item.setAttribute('data-value', value);\n    }\n    if (option.textContent) {\n      item.setAttribute('data-label', option.textContent);\n    }\n    item.addEventListener('click', () => {\n      this.selectItem(item, true);\n    });\n    item.addEventListener('keydown', (event) => {\n      switch (event.key) {\n        case 'Enter':\n          this.selectItem(item, true);\n          event.preventDefault();\n          break;\n        case 'Escape':\n          this.escape();\n          event.preventDefault();\n          break;\n        default:\n      }\n    });\n\n    return item;\n  }\n\n  buildLabel() {\n    const label = document.createElement('span');\n    label.classList.add('ql-picker-label');\n    label.innerHTML = DropdownIcon;\n    // @ts-expect-error\n    label.tabIndex = '0';\n    label.setAttribute('role', 'button');\n    label.setAttribute('aria-expanded', 'false');\n    this.container.appendChild(label);\n    return label;\n  }\n\n  buildOptions() {\n    const options = document.createElement('span');\n    options.classList.add('ql-picker-options');\n\n    // Don't want screen readers to read this until options are visible\n    options.setAttribute('aria-hidden', 'true');\n    // @ts-expect-error\n    options.tabIndex = '-1';\n\n    // Need a unique id for aria-controls\n    options.id = `ql-picker-options-${optionsCounter}`;\n    optionsCounter += 1;\n    this.label.setAttribute('aria-controls', options.id);\n\n    // @ts-expect-error\n    this.options = options;\n\n    Array.from(this.select.options).forEach((option) => {\n      const item = this.buildItem(option);\n      options.appendChild(item);\n      if (option.selected === true) {\n        this.selectItem(item);\n      }\n    });\n    this.container.appendChild(options);\n  }\n\n  buildPicker() {\n    Array.from(this.select.attributes).forEach((item) => {\n      this.container.setAttribute(item.name, item.value);\n    });\n    this.container.classList.add('ql-picker');\n    this.label = this.buildLabel();\n    this.buildOptions();\n  }\n\n  escape() {\n    // Close menu and return focus to trigger label\n    this.close();\n    // Need setTimeout for accessibility to ensure that the browser executes\n    // focus on the next process thread and after any DOM content changes\n    setTimeout(() => this.label.focus(), 1);\n  }\n\n  close() {\n    this.container.classList.remove('ql-expanded');\n    this.label.setAttribute('aria-expanded', 'false');\n    // @ts-expect-error\n    this.options.setAttribute('aria-hidden', 'true');\n  }\n\n  selectItem(item: HTMLElement | null, trigger = false) {\n    const selected = this.container.querySelector('.ql-selected');\n    if (item === selected) return;\n    if (selected != null) {\n      selected.classList.remove('ql-selected');\n    }\n    if (item == null) return;\n    item.classList.add('ql-selected');\n    // @ts-expect-error Fix me later\n    this.select.selectedIndex = Array.from(item.parentNode.children).indexOf(\n      item,\n    );\n    if (item.hasAttribute('data-value')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-value', item.getAttribute('data-value'));\n    } else {\n      this.label.removeAttribute('data-value');\n    }\n    if (item.hasAttribute('data-label')) {\n      // @ts-expect-error Fix me later\n      this.label.setAttribute('data-label', item.getAttribute('data-label'));\n    } else {\n      this.label.removeAttribute('data-label');\n    }\n    if (trigger) {\n      this.select.dispatchEvent(new Event('change'));\n      this.close();\n    }\n  }\n\n  update() {\n    let option;\n    if (this.select.selectedIndex > -1) {\n      const item =\n        // @ts-expect-error Fix me later\n        this.container.querySelector('.ql-picker-options').children[\n          this.select.selectedIndex\n        ];\n      option = this.select.options[this.select.selectedIndex];\n      // @ts-expect-error\n      this.selectItem(item);\n    } else {\n      this.selectItem(null);\n    }\n    const isActive =\n      option != null &&\n      option !== this.select.querySelector('option[selected]');\n    this.label.classList.toggle('ql-active', isActive);\n  }\n}\n\nexport default Picker;\n", "import Picker from './picker.js';\n\nclass ColorPicker extends Picker {\n  constructor(select: HTMLSelectElement, label: string) {\n    super(select);\n    this.label.innerHTML = label;\n    this.container.classList.add('ql-color-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item'))\n      .slice(0, 7)\n      .forEach((item) => {\n        item.classList.add('ql-primary');\n      });\n  }\n\n  buildItem(option: HTMLOptionElement) {\n    const item = super.buildItem(option);\n    item.style.backgroundColor = option.getAttribute('value') || '';\n    return item;\n  }\n\n  selectItem(item: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(item, trigger);\n    const colorLabel = this.label.querySelector<HTMLElement>('.ql-color-label');\n    const value = item ? item.getAttribute('data-value') || '' : '';\n    if (colorLabel) {\n      if (colorLabel.tagName === 'line') {\n        colorLabel.style.stroke = value;\n      } else {\n        colorLabel.style.fill = value;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n", "import Picker from './picker.js';\n\nclass IconPicker extends Picker {\n  defaultItem: HTMLElement | null;\n\n  constructor(select: HTMLSelectElement, icons: Record<string, string>) {\n    super(select);\n    this.container.classList.add('ql-icon-picker');\n    Array.from(this.container.querySelectorAll('.ql-picker-item')).forEach(\n      (item) => {\n        item.innerHTML = icons[item.getAttribute('data-value') || ''];\n      },\n    );\n    this.defaultItem = this.container.querySelector('.ql-selected');\n    this.selectItem(this.defaultItem);\n  }\n\n  selectItem(target: HTMLElement | null, trigger?: boolean) {\n    super.selectItem(target, trigger);\n    const item = target || this.defaultItem;\n    if (item != null) {\n      if (this.label.innerHTML === item.innerHTML) return;\n      this.label.innerHTML = item.innerHTML;\n    }\n  }\n}\n\nexport default IconPicker;\n", "import type Quill from '../core.js';\nimport type { Bounds } from '../core/selection.js';\n\nconst isScrollable = (el: Element) => {\n  const { overflowY } = getComputedStyle(el, null);\n  return overflowY !== 'visible' && overflowY !== 'clip';\n};\n\nclass Tooltip {\n  quill: Quill;\n  boundsContainer: HTMLElement;\n  root: HTMLDivElement;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    this.quill = quill;\n    this.boundsContainer = boundsContainer || document.body;\n    this.root = quill.addContainer('ql-tooltip');\n    // @ts-expect-error\n    this.root.innerHTML = this.constructor.TEMPLATE;\n    if (isScrollable(this.quill.root)) {\n      this.quill.root.addEventListener('scroll', () => {\n        this.root.style.marginTop = `${-1 * this.quill.root.scrollTop}px`;\n      });\n    }\n    this.hide();\n  }\n\n  hide() {\n    this.root.classList.add('ql-hidden');\n  }\n\n  position(reference: Bounds) {\n    const left =\n      reference.left + reference.width / 2 - this.root.offsetWidth / 2;\n    // root.scrollTop should be 0 if scrollContainer !== root\n    const top = reference.bottom + this.quill.root.scrollTop;\n    this.root.style.left = `${left}px`;\n    this.root.style.top = `${top}px`;\n    this.root.classList.remove('ql-flip');\n    const containerBounds = this.boundsContainer.getBoundingClientRect();\n    const rootBounds = this.root.getBoundingClientRect();\n    let shift = 0;\n    if (rootBounds.right > containerBounds.right) {\n      shift = containerBounds.right - rootBounds.right;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.left < containerBounds.left) {\n      shift = containerBounds.left - rootBounds.left;\n      this.root.style.left = `${left + shift}px`;\n    }\n    if (rootBounds.bottom > containerBounds.bottom) {\n      const height = rootBounds.bottom - rootBounds.top;\n      const verticalShift = reference.bottom - reference.top + height;\n      this.root.style.top = `${top - verticalShift}px`;\n      this.root.classList.add('ql-flip');\n    }\n    return shift;\n  }\n\n  show() {\n    this.root.classList.remove('ql-editing');\n    this.root.classList.remove('ql-hidden');\n  }\n}\n\nexport default Tooltip;\n", "import { merge } from 'lodash-es';\nimport type Quill from '../core/quill.js';\nimport Emitter from '../core/emitter.js';\nimport Theme from '../core/theme.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport ColorPicker from '../ui/color-picker.js';\nimport IconPicker from '../ui/icon-picker.js';\nimport Picker from '../ui/picker.js';\nimport Tooltip from '../ui/tooltip.js';\nimport type { Range } from '../core/selection.js';\nimport type Clipboard from '../modules/clipboard.js';\nimport type History from '../modules/history.js';\nimport type Keyboard from '../modules/keyboard.js';\nimport type Uploader from '../modules/uploader.js';\nimport type Selection from '../core/selection.js';\n\nconst ALIGNS = [false, 'center', 'right', 'justify'];\n\nconst COLORS = [\n  '#000000',\n  '#e60000',\n  '#ff9900',\n  '#ffff00',\n  '#008a00',\n  '#0066cc',\n  '#9933ff',\n  '#ffffff',\n  '#facccc',\n  '#ffebcc',\n  '#ffffcc',\n  '#cce8cc',\n  '#cce0f5',\n  '#ebd6ff',\n  '#bbbbbb',\n  '#f06666',\n  '#ffc266',\n  '#ffff66',\n  '#66b966',\n  '#66a3e0',\n  '#c285ff',\n  '#888888',\n  '#a10000',\n  '#b26b00',\n  '#b2b200',\n  '#006100',\n  '#0047b2',\n  '#6b24b2',\n  '#444444',\n  '#5c0000',\n  '#663d00',\n  '#666600',\n  '#003700',\n  '#002966',\n  '#3d1466',\n];\n\nconst FONTS = [false, 'serif', 'monospace'];\n\nconst HEADERS = ['1', '2', '3', false];\n\nconst SIZES = ['small', false, 'large', 'huge'];\n\nclass BaseTheme extends Theme {\n  pickers: Picker[];\n  tooltip?: Tooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    super(quill, options);\n    const listener = (e: MouseEvent) => {\n      if (!document.body.contains(quill.root)) {\n        document.body.removeEventListener('click', listener);\n        return;\n      }\n      if (\n        this.tooltip != null &&\n        // @ts-expect-error\n        !this.tooltip.root.contains(e.target) &&\n        // @ts-expect-error\n        document.activeElement !== this.tooltip.textbox &&\n        !this.quill.hasFocus()\n      ) {\n        this.tooltip.hide();\n      }\n      if (this.pickers != null) {\n        this.pickers.forEach((picker) => {\n          // @ts-expect-error\n          if (!picker.container.contains(e.target)) {\n            picker.close();\n          }\n        });\n      }\n    };\n    quill.emitter.listenDOM('click', document.body, listener);\n  }\n\n  addModule(name: 'clipboard'): Clipboard;\n  addModule(name: 'keyboard'): Keyboard;\n  addModule(name: 'uploader'): Uploader;\n  addModule(name: 'history'): History;\n  addModule(name: 'selection'): Selection;\n  addModule(name: string): unknown;\n  addModule(name: string) {\n    const module = super.addModule(name);\n    if (name === 'toolbar') {\n      // @ts-expect-error\n      this.extendToolbar(module);\n    }\n    return module;\n  }\n\n  buildButtons(\n    buttons: NodeListOf<HTMLElement>,\n    icons: Record<string, Record<string, string> | string>,\n  ) {\n    Array.from(buttons).forEach((button) => {\n      const className = button.getAttribute('class') || '';\n      className.split(/\\s+/).forEach((name) => {\n        if (!name.startsWith('ql-')) return;\n        name = name.slice('ql-'.length);\n        if (icons[name] == null) return;\n        if (name === 'direction') {\n          // @ts-expect-error\n          button.innerHTML = icons[name][''] + icons[name].rtl;\n        } else if (typeof icons[name] === 'string') {\n          // @ts-expect-error\n          button.innerHTML = icons[name];\n        } else {\n          // @ts-expect-error\n          const value = button.value || '';\n          // @ts-expect-error\n          if (value != null && icons[name][value]) {\n            // @ts-expect-error\n            button.innerHTML = icons[name][value];\n          }\n        }\n      });\n    });\n  }\n\n  buildPickers(\n    selects: NodeListOf<HTMLSelectElement>,\n    icons: Record<string, string | Record<string, string>>,\n  ) {\n    this.pickers = Array.from(selects).map((select) => {\n      if (select.classList.contains('ql-align')) {\n        if (select.querySelector('option') == null) {\n          fillSelect(select, ALIGNS);\n        }\n        if (typeof icons.align === 'object') {\n          return new IconPicker(select, icons.align);\n        }\n      }\n      if (\n        select.classList.contains('ql-background') ||\n        select.classList.contains('ql-color')\n      ) {\n        const format = select.classList.contains('ql-background')\n          ? 'background'\n          : 'color';\n        if (select.querySelector('option') == null) {\n          fillSelect(\n            select,\n            COLORS,\n            format === 'background' ? '#ffffff' : '#000000',\n          );\n        }\n        return new ColorPicker(select, icons[format] as string);\n      }\n      if (select.querySelector('option') == null) {\n        if (select.classList.contains('ql-font')) {\n          fillSelect(select, FONTS);\n        } else if (select.classList.contains('ql-header')) {\n          fillSelect(select, HEADERS);\n        } else if (select.classList.contains('ql-size')) {\n          fillSelect(select, SIZES);\n        }\n      }\n      return new Picker(select);\n    });\n    const update = () => {\n      this.pickers.forEach((picker) => {\n        picker.update();\n      });\n    };\n    this.quill.on(Emitter.events.EDITOR_CHANGE, update);\n  }\n}\nBaseTheme.DEFAULTS = merge({}, Theme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        formula() {\n          this.quill.theme.tooltip.edit('formula');\n        },\n        image() {\n          let fileInput = this.container.querySelector(\n            'input.ql-image[type=file]',\n          );\n          if (fileInput == null) {\n            fileInput = document.createElement('input');\n            fileInput.setAttribute('type', 'file');\n            fileInput.setAttribute(\n              'accept',\n              this.quill.uploader.options.mimetypes.join(', '),\n            );\n            fileInput.classList.add('ql-image');\n            fileInput.addEventListener('change', () => {\n              const range = this.quill.getSelection(true);\n              this.quill.uploader.upload(range, fileInput.files);\n              fileInput.value = '';\n            });\n            this.container.appendChild(fileInput);\n          }\n          fileInput.click();\n        },\n        video() {\n          this.quill.theme.tooltip.edit('video');\n        },\n      },\n    },\n  },\n});\n\nclass BaseTooltip extends Tooltip {\n  textbox: HTMLInputElement | null;\n  linkRange?: Range;\n\n  constructor(quill: Quill, boundsContainer?: HTMLElement) {\n    super(quill, boundsContainer);\n    this.textbox = this.root.querySelector('input[type=\"text\"]');\n    this.listen();\n  }\n\n  listen() {\n    // @ts-expect-error Fix me later\n    this.textbox.addEventListener('keydown', (event) => {\n      if (event.key === 'Enter') {\n        this.save();\n        event.preventDefault();\n      } else if (event.key === 'Escape') {\n        this.cancel();\n        event.preventDefault();\n      }\n    });\n  }\n\n  cancel() {\n    this.hide();\n    this.restoreFocus();\n  }\n\n  edit(mode = 'link', preview: string | null = null) {\n    this.root.classList.remove('ql-hidden');\n    this.root.classList.add('ql-editing');\n    if (this.textbox == null) return;\n\n    if (preview != null) {\n      this.textbox.value = preview;\n    } else if (mode !== this.root.getAttribute('data-mode')) {\n      this.textbox.value = '';\n    }\n    const bounds = this.quill.getBounds(this.quill.selection.savedRange);\n    if (bounds != null) {\n      this.position(bounds);\n    }\n    this.textbox.select();\n    this.textbox.setAttribute(\n      'placeholder',\n      this.textbox.getAttribute(`data-${mode}`) || '',\n    );\n    this.root.setAttribute('data-mode', mode);\n  }\n\n  restoreFocus() {\n    this.quill.focus({ preventScroll: true });\n  }\n\n  save() {\n    // @ts-expect-error Fix me later\n    let { value } = this.textbox;\n    switch (this.root.getAttribute('data-mode')) {\n      case 'link': {\n        const { scrollTop } = this.quill.root;\n        if (this.linkRange) {\n          this.quill.formatText(\n            this.linkRange,\n            'link',\n            value,\n            Emitter.sources.USER,\n          );\n          delete this.linkRange;\n        } else {\n          this.restoreFocus();\n          this.quill.format('link', value, Emitter.sources.USER);\n        }\n        this.quill.root.scrollTop = scrollTop;\n        break;\n      }\n      case 'video': {\n        value = extractVideoUrl(value);\n      } // eslint-disable-next-line no-fallthrough\n      case 'formula': {\n        if (!value) break;\n        const range = this.quill.getSelection(true);\n        if (range != null) {\n          const index = range.index + range.length;\n          this.quill.insertEmbed(\n            index,\n            // @ts-expect-error Fix me later\n            this.root.getAttribute('data-mode'),\n            value,\n            Emitter.sources.USER,\n          );\n          if (this.root.getAttribute('data-mode') === 'formula') {\n            this.quill.insertText(index + 1, ' ', Emitter.sources.USER);\n          }\n          this.quill.setSelection(index + 2, Emitter.sources.USER);\n        }\n        break;\n      }\n      default:\n    }\n    // @ts-expect-error Fix me later\n    this.textbox.value = '';\n    this.hide();\n  }\n}\n\nfunction extractVideoUrl(url: string) {\n  let match =\n    url.match(\n      /^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/,\n    ) ||\n    url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);\n  if (match) {\n    return `${match[1] || 'https'}://www.youtube.com/embed/${\n      match[2]\n    }?showinfo=0`;\n  }\n  // eslint-disable-next-line no-cond-assign\n  if ((match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/))) {\n    return `${match[1] || 'https'}://player.vimeo.com/video/${match[2]}/`;\n  }\n  return url;\n}\n\nfunction fillSelect(\n  select: HTMLSelectElement,\n  values: Array<string | boolean>,\n  defaultValue: unknown = false,\n) {\n  values.forEach((value) => {\n    const option = document.createElement('option');\n    if (value === defaultValue) {\n      option.setAttribute('selected', 'selected');\n    } else {\n      option.setAttribute('value', String(value));\n    }\n    select.appendChild(option);\n  });\n}\n\nexport { BaseTooltip, BaseTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport { Range } from '../core/selection.js';\nimport type { Bounds } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { ThemeOptions } from '../core/theme.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  ['bold', 'italic', 'link'],\n  [{ header: 1 }, { header: 2 }, 'blockquote'],\n];\n\nclass BubbleTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<span class=\"ql-tooltip-arrow\"></span>',\n    '<div class=\"ql-tooltip-editor\">',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-close\"></a>',\n    '</div>',\n  ].join('');\n\n  constructor(quill: Quill, bounds?: HTMLElement) {\n    super(quill, bounds);\n    this.quill.on(\n      Emitter.events.EDITOR_CHANGE,\n      (type, range, oldRange, source) => {\n        if (type !== Emitter.events.SELECTION_CHANGE) return;\n        if (\n          range != null &&\n          range.length > 0 &&\n          source === Emitter.sources.USER\n        ) {\n          this.show();\n          // Lock our width so we will expand beyond our offsetParent boundaries\n          this.root.style.left = '0px';\n          this.root.style.width = '';\n          this.root.style.width = `${this.root.offsetWidth}px`;\n          const lines = this.quill.getLines(range.index, range.length);\n          if (lines.length === 1) {\n            const bounds = this.quill.getBounds(range);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n          } else {\n            const lastLine = lines[lines.length - 1];\n            const index = this.quill.getIndex(lastLine);\n            const length = Math.min(\n              lastLine.length() - 1,\n              range.index + range.length - index,\n            );\n            const indexBounds = this.quill.getBounds(new Range(index, length));\n            if (indexBounds != null) {\n              this.position(indexBounds);\n            }\n          }\n        } else if (\n          document.activeElement !== this.textbox &&\n          this.quill.hasFocus()\n        ) {\n          this.hide();\n        }\n      },\n    );\n  }\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root.querySelector('.ql-close').addEventListener('click', () => {\n      this.root.classList.remove('ql-editing');\n    });\n    this.quill.on(Emitter.events.SCROLL_OPTIMIZE, () => {\n      // Let selection be restored by toolbar handlers before repositioning\n      setTimeout(() => {\n        if (this.root.classList.contains('ql-hidden')) return;\n        const range = this.quill.getSelection();\n        if (range != null) {\n          const bounds = this.quill.getBounds(range);\n          if (bounds != null) {\n            this.position(bounds);\n          }\n        }\n      }, 1);\n    });\n  }\n\n  cancel() {\n    this.show();\n  }\n\n  position(reference: Bounds) {\n    const shift = super.position(reference);\n    const arrow = this.root.querySelector('.ql-tooltip-arrow');\n    // @ts-expect-error\n    arrow.style.marginLeft = '';\n    if (shift !== 0) {\n      // @ts-expect-error\n      arrow.style.marginLeft = `${-1 * shift - arrow.offsetWidth / 2}px`;\n    }\n    return shift;\n  }\n}\n\nclass BubbleTheme extends BaseTheme {\n  tooltip: BubbleTooltip;\n\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-bubble');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    // @ts-expect-error\n    this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);\n    if (toolbar.container != null) {\n      this.tooltip.root.appendChild<HTMLElement>(toolbar.container);\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n    }\n  }\n}\nBubbleTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (!value) {\n            this.quill.format('link', false, Quill.sources.USER);\n          } else {\n            // @ts-expect-error\n            this.quill.theme.tooltip.edit();\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport { BubbleTooltip, BubbleTheme as default };\n", "import { merge } from 'lodash-es';\nimport Emitter from '../core/emitter.js';\nimport BaseTheme, { BaseTooltip } from './base.js';\nimport LinkBlot from '../formats/link.js';\nimport { Range } from '../core/selection.js';\nimport icons from '../ui/icons.js';\nimport Quill from '../core/quill.js';\nimport type { Context } from '../modules/keyboard.js';\nimport type Toolbar from '../modules/toolbar.js';\nimport type { ToolbarConfig } from '../modules/toolbar.js';\nimport type { ThemeOptions } from '../core/theme.js';\n\nconst TOOLBAR_CONFIG: ToolbarConfig = [\n  [{ header: ['1', '2', '3', false] }],\n  ['bold', 'italic', 'underline', 'link'],\n  [{ list: 'ordered' }, { list: 'bullet' }],\n  ['clean'],\n];\n\nclass SnowTooltip extends BaseTooltip {\n  static TEMPLATE = [\n    '<a class=\"ql-preview\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"about:blank\"></a>',\n    '<input type=\"text\" data-formula=\"e=mc^2\" data-link=\"https://quilljs.com\" data-video=\"Embed URL\">',\n    '<a class=\"ql-action\"></a>',\n    '<a class=\"ql-remove\"></a>',\n  ].join('');\n\n  preview = this.root.querySelector('a.ql-preview');\n\n  listen() {\n    super.listen();\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-action')\n      .addEventListener('click', (event) => {\n        if (this.root.classList.contains('ql-editing')) {\n          this.save();\n        } else {\n          // @ts-expect-error Fix me later\n          this.edit('link', this.preview.textContent);\n        }\n        event.preventDefault();\n      });\n    // @ts-expect-error Fix me later\n    this.root\n      .querySelector('a.ql-remove')\n      .addEventListener('click', (event) => {\n        if (this.linkRange != null) {\n          const range = this.linkRange;\n          this.restoreFocus();\n          this.quill.formatText(range, 'link', false, Emitter.sources.USER);\n          delete this.linkRange;\n        }\n        event.preventDefault();\n        this.hide();\n      });\n    this.quill.on(\n      Emitter.events.SELECTION_CHANGE,\n      (range, oldRange, source) => {\n        if (range == null) return;\n        if (range.length === 0 && source === Emitter.sources.USER) {\n          const [link, offset] = this.quill.scroll.descendant(\n            LinkBlot,\n            range.index,\n          );\n          if (link != null) {\n            this.linkRange = new Range(range.index - offset, link.length());\n            const preview = LinkBlot.formats(link.domNode);\n            // @ts-expect-error Fix me later\n            this.preview.textContent = preview;\n            // @ts-expect-error Fix me later\n            this.preview.setAttribute('href', preview);\n            this.show();\n            const bounds = this.quill.getBounds(this.linkRange);\n            if (bounds != null) {\n              this.position(bounds);\n            }\n            return;\n          }\n        } else {\n          delete this.linkRange;\n        }\n        this.hide();\n      },\n    );\n  }\n\n  show() {\n    super.show();\n    this.root.removeAttribute('data-mode');\n  }\n}\n\nclass SnowTheme extends BaseTheme {\n  constructor(quill: Quill, options: ThemeOptions) {\n    if (\n      options.modules.toolbar != null &&\n      options.modules.toolbar.container == null\n    ) {\n      options.modules.toolbar.container = TOOLBAR_CONFIG;\n    }\n    super(quill, options);\n    this.quill.container.classList.add('ql-snow');\n  }\n\n  extendToolbar(toolbar: Toolbar) {\n    if (toolbar.container != null) {\n      toolbar.container.classList.add('ql-snow');\n      this.buildButtons(toolbar.container.querySelectorAll('button'), icons);\n      this.buildPickers(toolbar.container.querySelectorAll('select'), icons);\n      // @ts-expect-error\n      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);\n      if (toolbar.container.querySelector('.ql-link')) {\n        this.quill.keyboard.addBinding(\n          { key: 'k', shortKey: true },\n          (_range: Range, context: Context) => {\n            toolbar.handlers.link.call(toolbar, !context.format.link);\n          },\n        );\n      }\n    }\n  }\n}\nSnowTheme.DEFAULTS = merge({}, BaseTheme.DEFAULTS, {\n  modules: {\n    toolbar: {\n      handlers: {\n        link(value: string) {\n          if (value) {\n            const range = this.quill.getSelection();\n            if (range == null || range.length === 0) return;\n            let preview = this.quill.getText(range);\n            if (\n              /^\\S+@\\S+\\.\\S+$/.test(preview) &&\n              preview.indexOf('mailto:') !== 0\n            ) {\n              preview = `mailto:${preview}`;\n            }\n            // @ts-expect-error\n            const { tooltip } = this.quill.theme;\n            tooltip.edit('link', preview);\n          } else {\n            this.quill.format('link', false, Quill.sources.USER);\n          }\n        },\n      },\n    },\n  },\n} satisfies ThemeOptions);\n\nexport default SnowTheme;\n", "import Quill from './core.js';\nimport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n} from './core.js';\n\nimport { AlignClass, AlignStyle } from './formats/align.js';\nimport {\n  DirectionAttribute,\n  DirectionClass,\n  DirectionStyle,\n} from './formats/direction.js';\nimport Indent from './formats/indent.js';\n\nimport Blockquote from './formats/blockquote.js';\nimport Header from './formats/header.js';\nimport List from './formats/list.js';\n\nimport { BackgroundClass, BackgroundStyle } from './formats/background.js';\nimport { ColorClass, ColorStyle } from './formats/color.js';\nimport { FontClass, FontStyle } from './formats/font.js';\nimport { SizeClass, SizeStyle } from './formats/size.js';\n\nimport Bold from './formats/bold.js';\nimport Italic from './formats/italic.js';\nimport Link from './formats/link.js';\nimport Script from './formats/script.js';\nimport Strike from './formats/strike.js';\nimport Underline from './formats/underline.js';\n\nimport Formula from './formats/formula.js';\nimport Image from './formats/image.js';\nimport Video from './formats/video.js';\n\nimport CodeBlock, { Code as InlineCode } from './formats/code.js';\n\nimport Syntax from './modules/syntax.js';\nimport Table from './modules/table.js';\nimport Toolbar from './modules/toolbar.js';\n\nimport Icons from './ui/icons.js';\nimport Picker from './ui/picker.js';\nimport ColorPicker from './ui/color-picker.js';\nimport IconPicker from './ui/icon-picker.js';\nimport Tooltip from './ui/tooltip.js';\n\nimport BubbleTheme from './themes/bubble.js';\nimport SnowTheme from './themes/snow.js';\n\nQuill.register(\n  {\n    'attributors/attribute/direction': DirectionAttribute,\n\n    'attributors/class/align': AlignClass,\n    'attributors/class/background': BackgroundClass,\n    'attributors/class/color': ColorClass,\n    'attributors/class/direction': DirectionClass,\n    'attributors/class/font': FontClass,\n    'attributors/class/size': SizeClass,\n\n    'attributors/style/align': AlignStyle,\n    'attributors/style/background': BackgroundStyle,\n    'attributors/style/color': ColorStyle,\n    'attributors/style/direction': DirectionStyle,\n    'attributors/style/font': FontStyle,\n    'attributors/style/size': SizeStyle,\n  },\n  true,\n);\n\nQuill.register(\n  {\n    'formats/align': AlignClass,\n    'formats/direction': DirectionClass,\n    'formats/indent': Indent,\n\n    'formats/background': BackgroundStyle,\n    'formats/color': ColorStyle,\n    'formats/font': FontClass,\n    'formats/size': SizeClass,\n\n    'formats/blockquote': Blockquote,\n    'formats/code-block': CodeBlock,\n    'formats/header': Header,\n    'formats/list': List,\n\n    'formats/bold': Bold,\n    'formats/code': InlineCode,\n    'formats/italic': Italic,\n    'formats/link': Link,\n    'formats/script': Script,\n    'formats/strike': Strike,\n    'formats/underline': Underline,\n\n    'formats/formula': Formula,\n    'formats/image': Image,\n    'formats/video': Video,\n\n    'modules/syntax': Syntax,\n    'modules/table': Table,\n    'modules/toolbar': Toolbar,\n\n    'themes/bubble': BubbleTheme,\n    'themes/snow': SnowTheme,\n\n    'ui/icons': Icons,\n    'ui/picker': Picker,\n    'ui/icon-picker': IconPicker,\n    'ui/color-picker': ColorPicker,\n    'ui/tooltip': Tooltip,\n  },\n  true,\n);\n\nexport {\n  AttributeMap,\n  Delta,\n  Module,\n  Op,\n  OpIterator,\n  Parchment,\n  Range,\n} from './core.js';\nexport type {\n  Bounds,\n  DebugLevel,\n  EmitterSource,\n  ExpandedQuillOptions,\n  QuillOptions,\n};\n\nexport default Quill;\n"],
  "mappings": "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",
  "names": ["isLine", "blot", "Block", "BlockEmbed", "isUpdatable", "updateContent", "Scroll", "ScrollBlot", "constructor", "registry", "domNode", "_ref", "emitter", "batch", "optimize", "enable", "addEventListener", "e", "handleDragStart", "batchStart", "Array", "isArray", "batchEnd", "mutations", "update", "emitMount", "emit", "Emitter", "events", "SCROLL_BLOT_MOUNT", "emitUnmount", "SCROLL_BLOT_UNMOUNT", "emitEmbedUpdate", "change", "SCROLL_EMBED_UPDATE", "deleteAt", "index", "length", "first", "offset", "line", "last", "ref", "children", "head", "Break", "moveChildren", "remove", "enabled", "arguments", "undefined", "setAttribute", "formatAt", "format", "value", "insertAt", "def", "scroll", "query", "Scope", "BLOCK", "create", "statics", "defaultChild", "blotName", "appendChild", "endsWith", "slice", "embed", "insertBefore", "scope", "INLINE_BLOT", "wrapper", "insertContents", "delta", "renderBlocks", "deltaToRenderBlocks", "concat", "Delta", "insert", "pop", "shift", "shouldInsertNewlineChar", "type", "descendant", "key", "insertInlineContents", "newlineCharLength", "lineEndIndex", "formats", "bubbleFormats", "attributes", "AttributeMap", "diff", "Object", "keys", "forEach", "name", "refBlot", "refBlotOffset", "find", "split", "renderBlock", "block", "createBlock", "blockEmbed", "isEnabled", "getAttribute", "leaf", "path", "LeafBlot", "lines", "Number", "MAX_VALUE", "getLines", "blotIndex", "blotLength", "lengthLeft", "forEachAt", "child", "childIndex", "childLength", "push", "ContainerBlot", "context", "SCROLL_OPTIMIZE", "source", "sources", "USER", "observer", "takeRecords", "filter", "_ref2", "target", "SCROLL_BEFORE_UPDATE", "SCROLL_UPDATE", "updateEmbedAt", "b", "event", "preventDefault", "currentBlockDelta", "op", "splitted", "text", "INLINE", "entries", "_ref3", "isBlockBlot", "BLOT", "_ref4", "className", "tagName", "allowedChildren", "Container", "parent", "inlineContents", "reduce", "Op", "isInlineEmbed", "History", "Module", "constructor", "quill", "options", "lastRecorded", "ignoreChange", "stack", "undo", "redo", "currentRange", "on", "Quill", "events", "EDITOR_CHANGE", "eventName", "value", "oldValue", "source", "SELECTION_CHANGE", "sources", "SILENT", "TEXT_CHANGE", "userOnly", "USER", "record", "transform", "transformRange", "keyboard", "addBinding", "key", "shortKey", "bind", "shiftKey", "test", "navigator", "platform", "root", "addEventListener", "event", "inputType", "preventDefault", "change", "dest", "length", "item", "pop", "base", "getContents", "inverseDelta", "delta", "invert", "push", "range", "updateContents", "restoreSelection", "clear", "cutoff", "changeDelta", "oldDelta", "ops", "undoDelta", "undoRange", "timestamp", "Date", "now", "delay", "compose", "maxStack", "shift", "transformStack", "stackItem", "setSelection", "index", "getLastChangeIndex", "scroll", "DEFAULTS", "remoteDelta", "i", "oldItem", "splice", "endsWithNewlineChange", "lastOp", "insert", "endsWith", "attributes", "Object", "keys", "some", "attr", "query", "Scope", "BLOCK", "deleteLength", "reduce", "op", "delete", "changeIndex", "start", "transformPosition", "end", "import_quill_delta", "Uploader", "Module", "constructor", "quill", "options", "root", "addEventListener", "e", "preventDefault", "native", "document", "caretRangeFromPoint", "clientX", "clientY", "caretPositionFromPoint", "position", "createRange", "setStart", "offsetNode", "offset", "setEnd", "normalized", "selection", "normalizeNative", "range", "normalizedToRange", "dataTransfer", "files", "upload", "uploads", "Array", "from", "forEach", "file", "mimetypes", "includes", "type", "push", "length", "handler", "call", "DEFAULTS", "scroll", "query", "promises", "map", "Promise", "resolve", "reader", "FileReader", "onload", "result", "readAsDataURL", "all", "then", "images", "update", "reduce", "delta", "image", "insert", "Delta", "retain", "index", "delete", "updateContents", "Emitter", "sources", "USER", "setSelection", "SILENT", "import_quill_delta", "import_quill_delta", "INSERT_TYPES", "Input", "Module", "constructor", "quill", "options", "root", "addEventListener", "event", "handleBeforeInput", "test", "navigator", "userAgent", "on", "Quill", "events", "COMPOSITION_BEFORE_START", "handleCompositionStart", "deleteRange", "range", "replaceText", "text", "arguments", "length", "undefined", "formats", "getFormat", "index", "updateContents", "Delta", "retain", "insert", "sources", "USER", "setSelection", "SILENT", "composition", "isComposing", "defaultPrevented", "includes", "inputType", "staticRange", "getTargetRanges", "collapsed", "getPlainTextFromInputEvent", "normalized", "selection", "normalizeNative", "normalizedToRange", "preventDefault", "getSelection", "data", "dataTransfer", "types", "getData", "isMac", "test", "navigator", "platform", "TTL_FOR_VALID_SELECTION_CHANGE", "canMoveCaretBeforeUINode", "event", "key", "ctrlKey", "UINode", "Module", "constructor", "quill", "options", "isListening", "selectionChangeDeadline", "handleArrowKeys", "handleNavigationShortcuts", "keyboard", "addBinding", "offset", "shiftKey", "handler", "range", "_ref", "line", "ParentBlot", "uiNode", "isRTL", "getComputedStyle", "domNode", "setSelection", "index", "length", "Quill", "sources", "USER", "root", "addEventListener", "defaultPrevented", "ensureListeningToSelectionChange", "Date", "now", "listener", "handleSelectionChange", "document", "once", "selection", "getSelection", "getRangeAt", "collapsed", "startOffset", "scroll", "find", "startContainer", "newRange", "createRange", "setStartAfter", "setEndAfter", "removeAllRanges", "addRange", "Quill", "register", "Block", "BlockEmbed", "Break", "Container", "Cursor", "Embed", "Inline", "Scroll", "TextBlot", "Clipboard", "History", "Keyboard", "Uploader", "Input", "UINode", "IndentAttributor", "ClassAttributor", "add", "node", "value", "normalizedValue", "indent", "remove", "toString", "canAdd", "parseInt", "undefined", "IndentClass", "scope", "Scope", "BLOCK", "whitelist", "Blockquote", "Block", "blotName", "tagName", "Header", "Block", "formats", "domNode", "tagName", "indexOf", "blotName", "ListContainer", "Container", "blotName", "tagName", "ListItem", "Block", "create", "value", "node", "setAttribute", "formats", "domNode", "getAttribute", "undefined", "register", "Quill", "constructor", "scroll", "ui", "ownerDocument", "createElement", "listEventHandler", "e", "isEnabled", "format", "statics", "preventDefault", "addEventListener", "attachUI", "name", "allowedChildren", "requiredContainer", "Bold", "Inline", "create", "formats", "optimize", "context", "domNode", "tagName", "statics", "replaceWith", "blotName", "Italic", "Bold", "blotName", "tagName", "Link", "Inline", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "getAttribute", "url", "PROTOCOL_WHITELIST", "SANITIZED_URL", "format", "name", "statics", "blotName", "constructor", "tagName", "protocols", "anchor", "document", "createElement", "href", "protocol", "slice", "indexOf", "Script", "Inline", "create", "value", "document", "createElement", "formats", "domNode", "tagName", "undefined", "blotName", "Strike", "Bold", "blotName", "tagName", "Underline", "Inline", "blotName", "tagName", "Formula", "Embed", "create", "value", "window", "katex", "Error", "node", "render", "throwOnError", "errorColor", "setAttribute", "domNode", "getAttribute", "html", "formula", "blotName", "className", "tagName", "ATTRIBUTES", "Image", "EmbedBlot", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "reduce", "attribute", "hasAttribute", "getAttribute", "match", "url", "test", "format", "name", "indexOf", "removeAttribute", "blotName", "tagName", "ATTRIBUTES", "Video", "BlockEmbed", "create", "value", "node", "setAttribute", "sanitize", "formats", "domNode", "reduce", "attribute", "hasAttribute", "getAttribute", "url", "Link", "format", "name", "indexOf", "removeAttribute", "html", "video", "blotName", "className", "tagName", "import_quill_delta", "TableCell", "Block", "create", "value", "node", "setAttribute", "tableId", "formats", "domNode", "hasAttribute", "getAttribute", "undefined", "cellOffset", "parent", "children", "indexOf", "format", "name", "blotName", "row", "rowOffset", "table", "tagName", "TableRow", "Container", "checkMerge", "next", "head", "thisHead", "thisTail", "tail", "nextHead", "nextTail", "optimize", "context", "forEach", "child", "childFormats", "nextFormats", "splitAfter", "prev", "TableBody", "TableContainer", "balanceCells", "rows", "descendants", "maxColumns", "reduce", "max", "Math", "length", "Array", "fill", "blot", "scroll", "appendChild", "cells", "column", "map", "at", "deleteColumn", "index", "body", "descendant", "cell", "remove", "insertColumn", "ref", "insertBefore", "insertRow", "id", "allowedChildren", "requiredContainer", "random", "toString", "slice", "Table", "Module", "register", "Quill", "TableCell", "TableRow", "TableBody", "TableContainer", "constructor", "arguments", "listenBalanceCells", "balanceTables", "quill", "scroll", "descendants", "forEach", "table", "balanceCells", "deleteColumn", "cell", "getTable", "cellOffset", "update", "sources", "USER", "deleteRow", "row", "remove", "deleteTable", "offset", "setSelection", "SILENT", "range", "length", "undefined", "getSelection", "getLine", "index", "statics", "blotName", "parent", "insertColumn", "column", "shift", "rowOffset", "insertColumnLeft", "insertColumnRight", "insertRow", "children", "insertRowAbove", "insertRowBelow", "insertTable", "rows", "columns", "delta", "Array", "fill", "reduce", "memo", "text", "join", "insert", "tableId", "Delta", "retain", "updateContents", "on", "events", "SCROLL_OPTIMIZE", "mutations", "some", "mutation", "includes", "target", "tagName", "once", "TEXT_CHANGE", "old", "source", "import_quill_delta", "debug", "logger", "Toolbar", "Module", "constructor", "quill", "options", "Array", "isArray", "container", "document", "createElement", "setAttribute", "addControls", "parentNode", "insertBefore", "querySelector", "HTMLElement", "error", "classList", "add", "controls", "handlers", "Object", "keys", "forEach", "format", "_a", "handler", "addHandler", "from", "querySelectorAll", "input", "attach", "on", "Quill", "events", "EDITOR_CHANGE", "range", "selection", "getRange", "update", "find", "className", "indexOf", "slice", "length", "tagName", "scroll", "query", "warn", "eventName", "addEventListener", "e", "value", "selectedIndex", "selected", "hasAttribute", "contains", "preventDefault", "focus", "call", "prototype", "EmbedBlot", "prompt", "updateContents", "Delta", "retain", "index", "delete", "insert", "sources", "USER", "push", "formats", "getFormat", "pair", "option", "replace", "remove", "isActive", "getAttribute", "toString", "toggle", "DEFAULTS", "addButton", "appendChild", "groups", "group", "control", "addSelect", "values", "String", "clean", "getSelection", "name", "Scope", "INLINE", "removeFormat", "direction", "align", "indent", "parseInt", "modifier", "link", "list", "align", "alignLeftIcon", "center", "alignCenterIcon", "right", "alignRightIcon", "justify", "alignJustifyIcon", "background", "backgroundIcon", "blockquote", "blockquoteIcon", "bold", "boldIcon", "clean", "cleanIcon", "code", "codeIcon", "color", "colorIcon", "direction", "directionLeftToRightIcon", "rtl", "directionRightToLeftIcon", "formula", "formulaIcon", "header", "headerIcon", "header2Icon", "header3Icon", "header4Icon", "header5Icon", "header6Icon", "italic", "italicIcon", "image", "imageIcon", "indent", "indentIcon", "outdentIcon", "link", "linkIcon", "list", "bullet", "listBulletIcon", "check", "listCheckIcon", "ordered", "listOrderedIcon", "script", "sub", "subscriptIcon", "super", "superscriptIcon", "strike", "strikeIcon", "table", "tableIcon", "underline", "underlineIcon", "video", "videoIcon", "optionsCounter", "toggleAriaAttribute", "element", "attribute", "setAttribute", "getAttribute", "Picker", "constructor", "select", "container", "document", "createElement", "buildPicker", "style", "display", "parentNode", "insertBefore", "label", "addEventListener", "togglePicker", "event", "key", "escape", "preventDefault", "update", "bind", "classList", "toggle", "options", "buildItem", "option", "item", "tabIndex", "add", "value", "textContent", "selectItem", "buildLabel", "innerHTML", "DropdownIcon", "appendChild", "buildOptions", "id", "Array", "from", "forEach", "selected", "attributes", "name", "close", "setTimeout", "focus", "remove", "trigger", "arguments", "length", "undefined", "querySelector", "selectedIndex", "children", "indexOf", "hasAttribute", "removeAttribute", "dispatchEvent", "Event", "isActive", "ColorPicker", "Picker", "constructor", "select", "label", "innerHTML", "container", "classList", "add", "Array", "from", "querySelectorAll", "slice", "forEach", "item", "buildItem", "option", "style", "backgroundColor", "getAttribute", "selectItem", "trigger", "colorLabel", "querySelector", "value", "tagName", "stroke", "fill", "IconPicker", "Picker", "constructor", "select", "icons", "container", "classList", "add", "Array", "from", "querySelectorAll", "forEach", "item", "innerHTML", "getAttribute", "defaultItem", "querySelector", "selectItem", "target", "trigger", "label", "isScrollable", "el", "overflowY", "getComputedStyle", "Tooltip", "constructor", "quill", "boundsContainer", "document", "body", "root", "addContainer", "innerHTML", "TEMPLATE", "addEventListener", "style", "marginTop", "scrollTop", "hide", "classList", "add", "position", "reference", "left", "width", "offsetWidth", "top", "bottom", "remove", "containerBounds", "getBoundingClientRect", "rootBounds", "shift", "right", "height", "verticalShift", "show", "ALIGNS", "COLORS", "FONTS", "HEADERS", "SIZES", "BaseTheme", "Theme", "constructor", "quill", "options", "listener", "e", "document", "body", "contains", "root", "removeEventListener", "tooltip", "target", "activeElement", "textbox", "hasFocus", "hide", "pickers", "forEach", "picker", "container", "close", "emitter", "listenDOM", "addModule", "name", "module", "extendToolbar", "buildButtons", "buttons", "icons", "Array", "from", "button", "className", "getAttribute", "split", "startsWith", "slice", "length", "innerHTML", "rtl", "value", "buildPickers", "selects", "map", "select", "classList", "querySelector", "fillSelect", "align", "IconPicker", "format", "ColorPicker", "Picker", "update", "on", "Emitter", "events", "EDITOR_CHANGE", "DEFAULTS", "merge", "modules", "toolbar", "handlers", "formula", "theme", "edit", "image", "fileInput", "createElement", "setAttribute", "uploader", "mimetypes", "join", "add", "addEventListener", "range", "getSelection", "upload", "files", "appendChild", "click", "video", "BaseTooltip", "Tooltip", "boundsContainer", "listen", "event", "key", "save", "preventDefault", "cancel", "restoreFocus", "mode", "arguments", "undefined", "preview", "remove", "bounds", "getBounds", "selection", "savedRange", "position", "focus", "preventScroll", "scrollTop", "linkRange", "formatText", "sources", "USER", "extractVideoUrl", "index", "insertEmbed", "insertText", "setSelection", "url", "match", "values", "defaultValue", "option", "String", "TOOLBAR_CONFIG", "header", "BubbleTooltip", "BaseTooltip", "constructor", "quill", "bounds", "on", "Emitter", "events", "EDITOR_CHANGE", "type", "range", "oldRange", "source", "SELECTION_CHANGE", "length", "sources", "USER", "show", "root", "style", "left", "width", "offsetWidth", "lines", "getLines", "index", "getBounds", "position", "lastLine", "getIndex", "Math", "min", "indexBounds", "Range", "document", "activeElement", "textbox", "hasFocus", "hide", "listen", "querySelector", "addEventListener", "classList", "remove", "SCROLL_OPTIMIZE", "setTimeout", "contains", "getSelection", "cancel", "reference", "shift", "arrow", "marginLeft", "TEMPLATE", "join", "BubbleTheme", "BaseTheme", "options", "modules", "toolbar", "container", "add", "extendToolbar", "tooltip", "appendChild", "buildButtons", "querySelectorAll", "icons", "buildPickers", "DEFAULTS", "merge", "handlers", "link", "value", "format", "Quill", "theme", "edit", "TOOLBAR_CONFIG", "header", "list", "SnowTooltip", "BaseTooltip", "preview", "root", "querySelector", "listen", "addEventListener", "event", "classList", "contains", "save", "edit", "textContent", "preventDefault", "linkRange", "range", "restoreFocus", "quill", "formatText", "Emitter", "sources", "USER", "hide", "on", "events", "SELECTION_CHANGE", "oldRange", "source", "length", "link", "offset", "scroll", "descendant", "LinkBlot", "index", "Range", "formats", "domNode", "setAttribute", "show", "bounds", "getBounds", "position", "removeAttribute", "TEMPLATE", "join", "SnowTheme", "BaseTheme", "constructor", "options", "modules", "toolbar", "container", "add", "extendToolbar", "buildButtons", "querySelectorAll", "icons", "buildPickers", "tooltip", "keyboard", "addBinding", "key", "shortKey", "_range", "context", "handlers", "call", "format", "DEFAULTS", "merge", "value", "getSelection", "getText", "test", "indexOf", "theme", "Quill", "Quill", "register", "DirectionAttribute", "AlignClass", "BackgroundClass", "ColorClass", "DirectionClass", "FontClass", "SizeClass", "AlignStyle", "BackgroundStyle", "ColorStyle", "DirectionStyle", "FontStyle", "SizeStyle", "Indent", "Blockquote", "CodeBlock", "Header", "List", "Bold", "InlineCode", "Italic", "Link", "Script", "Strike", "Underline", "Formula", "Image", "Video", "Syntax", "Table", "Toolbar", "BubbleTheme", "SnowTheme", "Icons", "Picker", "IconPicker", "ColorPicker", "Tooltip"]
}
