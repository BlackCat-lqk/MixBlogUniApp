{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["// 基础配置\r\nconst config = {\r\n  baseURL: 'https://m.mixblog.cn/api', // 基础URL\r\n  timeout: 60000, // 超时时间(毫秒)\r\n  header: {\r\n    'Content-Type': 'application/json' // 默认请求头\r\n  }\r\n};\r\n\r\n// 请求队列\r\nconst requestQueue = [];\r\n\r\n/**\r\n * 显示加载框\r\n */\r\nconst showLoading = () => {\r\n  uni.showLoading({\r\n    title: '加载中...',\r\n    mask: true\r\n  });\r\n};\r\n\r\n/**\r\n * 隐藏加载框\r\n */\r\nconst hideLoading = () => {\r\n  uni.hideLoading();\r\n};\r\n\r\n/**\r\n * 请求拦截器\r\n */\r\nconst requestInterceptor = (options) => {\r\n  // 显示loading\r\n  if (options.loading !== false) {\r\n    showLoading();\r\n  }\r\n  \r\n  // 添加token\r\n  const token = uni.getStorageSync('token');\r\n  if (token) {\r\n    options.header = options.header || {};\r\n    options.header['Authorization'] = `Bearer ${token}`;\r\n  }\r\n  \r\n  return options;\r\n};\r\n\r\n/**\r\n * 响应拦截器\r\n */\r\nconst responseInterceptor = (response, options) => {\r\n  // 隐藏loading\r\n  if (options.loading !== false) {\r\n    hideLoading();\r\n  }\r\n  \r\n  // 处理响应数据\r\n  if (response.statusCode === 200) {\r\n    return Promise.resolve(response.data);\r\n  } else {\r\n    return Promise.reject(response);\r\n  }\r\n};\r\n\r\n/**\r\n * 错误处理\r\n */\r\nconst errorHandler = (error, options) => {\r\n  // 隐藏loading\r\n  if (options.loading !== false) {\r\n    hideLoading();\r\n  }\r\n  \r\n  // 处理错误\r\n  let errMsg = '请求失败';\r\n  if (error.errMsg) {\r\n    errMsg = error.errMsg;\r\n  } else if (error.message) {\r\n    errMsg = error.message;\r\n  }\r\n  \r\n  // 401 token过期处理\r\n  if (error.statusCode === 401) {\r\n    // 跳转到登录页\r\n    uni.navigateTo({\r\n      url: '@/pages/login/login'\r\n    });\r\n  }\r\n  \r\n  // 提示错误信息\r\n  if (options.showError !== false) {\r\n    uni.showToast({\r\n      title: errMsg,\r\n      icon: 'none',\r\n      duration: 2000\r\n    });\r\n  }\r\n  \r\n  return Promise.reject(error);\r\n};\r\n\r\n/**\r\n * 基础请求方法\r\n * @param {Object} options 请求配置\r\n * @returns {Promise} 返回Promise对象\r\n */\r\nconst request = (options) => {\r\n  // 合并配置\r\n  options = { ...config, ...options };\r\n  \r\n  // 处理完整URL\r\n  if (!options.url.startsWith('http') && config.baseURL) {\r\n    options.url = config.baseURL + options.url;\r\n  }\r\n  \r\n  // 请求拦截\r\n  options = requestInterceptor(options) || options;\r\n  \r\n  // 生成请求唯一标识\r\n  const requestKey = `${options.method}_${options.url}_${JSON.stringify(options.data)}`;\r\n  \r\n  // 检查重复请求\r\n  if (options.preventDuplicate) {\r\n    const existRequest = requestQueue.find(item => item.key === requestKey);\r\n    if (existRequest) {\r\n      return existRequest.request;\r\n    }\r\n  }\r\n  \r\n  // 创建请求Promise\r\n  const requestPromise = new Promise((resolve, reject) => {\r\n    uni.request({\r\n      ...options,\r\n      success: (res) => {\r\n        // 从队列中移除\r\n        requestQueue.splice(requestQueue.findIndex(item => item.key === requestKey), 1);\r\n        // 响应拦截\r\n        responseInterceptor(res, options)\r\n          .then(data => resolve(data))\r\n          .catch(err => reject(err));\r\n      },\r\n      fail: (err) => {\r\n        // 从队列中移除\r\n        requestQueue.splice(requestQueue.findIndex(item => item.key === requestKey), 1);\r\n        // 错误处理\r\n        errorHandler(err, options)\r\n          .catch(err => reject(err));\r\n      }\r\n    });\r\n  });\r\n  \r\n  // 添加到请求队列\r\n  if (options.preventDuplicate) {\r\n    requestQueue.push({\r\n      key: requestKey,\r\n      request: requestPromise\r\n    });\r\n  }\r\n  \r\n  return requestPromise;\r\n};\r\n\r\n// 导出常用方法\r\nexport const get = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'GET',\r\n    ...options\r\n  });\r\n};\r\n\r\nexport const post = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'POST',\r\n    ...options\r\n  });\r\n};\r\n\r\nexport const put = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'PUT',\r\n    ...options\r\n  });\r\n};\r\n\r\nexport const del = (url, data = {}, options = {}) => {\r\n  return request({\r\n    url,\r\n    data,\r\n    method: 'DELETE',\r\n    ...options\r\n  });\r\n};\r\n\r\nexport default request;"],"names":["uni","err"],"mappings":"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"}